[
    {
        "Page_Name":"Glowing Text",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a glowing text in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "h1",
                "attributes": {
                  "class": [
                    "glow"
                  ]
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Glowing Text'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <h1> tag inside the body section and add the class 'glow' inside the >body> tag"
        ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#333"
                  }
                ]
              },
              {
                "selector": ".glow",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "3em"
                  },
                  {
                    "property": "font-weight",
                    "value": "bold"
                  },
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "text-shadow",
                    "value": "0 0 10px #fff, 0 0 20px #f00, 0 0 30px #f00, 0 0 40px #f00, 0 0 50px #f00, 0 0 60px #f00, 0 0 70px #f00"
                  }
                ]
              }
            ],
          "CSS_Messages":[
              "Write a body css with margin set to 0, background-color set to '#333', height set to '100vh', justify-content set to 'center', display set to 'flex' and align-items set to 'center'",
              "Write the glow class with font-size set to '3em', font-weight set to 'bold', color set to '#fff' and text-shadow set to '0 0 10px #fff, 0 0 20px #f00, 0 0 30px #f00, 0 0 40px #f00, 0 0 50px #f00, 0 0 60px #f00, 0 0 70px #f00"
          ]
    
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/GlowingText.png"   
      },
      {
        "Page_Name":"Speech Bubble",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a speech bubble in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "speech-bubble"
                  ]
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Speech Bubble'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag inside teh <body> tag"
          ],   
            "CSS": [
              {
                "selector": ".speech-bubble",
                "properties": [
                  {
                    "property": "position",
                    "value": "relative"
                  },
                  {
                    "property": "background-color",
                    "value": "#3498db"
                  },
                  {
                    "property": "border-radius",
                    "value": "50px"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "max-width",
                    "value": "300px"
                  }
                ]
              },
              {
                "selector": ".speech-bubble::after",
                "properties": [
                  {
                    "property": "content",
                    "value": "\"\""
                  },
                  {
                    "property": "position",
                    "value": "absolute"
                  },
                  {
                    "property": "bottom",
                    "value": "-20px"
                  },
                  {
                    "property": "left",
                    "value": "50%"
                  },
                  {
                    "property": "transform",
                    "value": "translatex(-50%)"
                  },
                  {
                    "property": "width",
                    "value": "0"
                  },
                  {
                    "property": "height",
                    "value": "0"
                  },
                  {
                    "property": "border-left",
                    "value": "20px solid transparent"
                  },
                  {
                    "property": "border-right",
                    "value": "20px solid transparent"
                  },
                  {
                    "property": "border-top",
                    "value": "20px solid #3498db"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a speech-bubble class with font-family set to 'Arial, sans-serif', position set to 'relative', background-color set to '#3498db', border-radius set to '50px', padding set to '20px', color set to 'white' and maximum width set to '300px'",
            "Write the speech-bubble::after css with content set to '\"\"', position set to 'absolute', bottom set to '-20px', left set to '50%', transform set to 'translatex(-50%)', width set to '0', height set to '0', border-left set to '20px solid transparent', border-right set to '20px solid transparent' and border-top set to '20px solid #3498db'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/SpeechBubble.png"   
      },
      {
        "Page_Name":"Overlap Block Layout",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a over-lap block layout in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "block"
                  ],
                  "id": "block1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "block"
                  ],
                  "id": "block2"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Overlap Block Layout'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'container' inside the <body>",
            "Write the <div> tag and the </div> tag with class name 'block' and id 'block1' inside the <div> class container",
            "Write the <div> tag and the </div> tag with class name 'block' and id 'block2' inside the <div> class container"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  }
                ]
              },
              {
                "selector": ".container",
                "properties": [
                  {
                    "property": "position",
                    "value": "relative"
                  },
                  {
                    "property": "width",
                    "value": "300px"
                  },
                  {
                    "property": "height",
                    "value": "200px"
                  }
                ]
              },
              {
                "selector": ".block",
                "properties": [
                  {
                    "property": "position",
                    "value": "absolute"
                  },
                  {
                    "property": "width",
                    "value": "150px"
                  },
                  {
                    "property": "height",
                    "value": "150px"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "font-size",
                    "value": "18px"
                  },
                  {
                    "property": "font-weight",
                    "value": "bold"
                  }
                ]
              },
              {
                "selector": "#block1",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#3498db"
                  },
                  {
                    "property": "top",
                    "value": "0"
                  },
                  {
                    "property": "left",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": "#block2",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#e74c3c"
                  },
                  {
                    "property": "top",
                    "value": "50px"
                  },
                  {
                    "property": "left",
                    "value": "50px"
                  }
                ]
              }
            ],
          "CSS_Messages":  [
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', display set to 'flex', justify-content and align-items set to 'center', height set to '100vh' and background-color set to '#f0f0f0'",
            "Write the container class with position set to 'relative', width set to '300px' and height set to'200px'",
            "Write the block class with position set to 'absolute', width set to '150px', display set to 'flex', justify-content and align-items set to 'center', color set to 'white', font-size set to '18px' and font-weight set to 'bold'",
            "Write the block1 id with background-color set to '#3498db', top set to 0 and left set to 0",
            "Write the block2 id with background-color set to '#e74c3c', top set to 50px and left set to 50px"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/OverlapBlockLayout.png"   
      },
      {
        "Page_Name":"Cookie Consent Popup",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a cookie consent pop-up in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "cookie-bar"
                  ]
                }
              },
              {
                "tag": "span",
                "attributes": {
                  "class": [
                    "cookie-text"
                  ]
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "class": [
                    "got-it-btn"
                  ]
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Cookie Consent Popup'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag with the class 'cookie-bar' inside the body section",
            "Write the <span> tag with the class 'cookie-text' inside the div tag with class 'cookie-bar'",
            "Write the <button> tag with the class 'got-it-btn' inside the div tag cookie-bar"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  }
                ]
              },
              {
                "selector": ".cookie-bar",
                "properties": [
                  {
                    "property": "position",
                    "value": "fixed"
                  },
                  {
                    "property": "bottom",
                    "value": "0"
                  },
                  {
                    "property": "left",
                    "value": "0"
                  },
                  {
                    "property": "right",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#333"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "10px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".cookie-text",
                "properties": [
                  {
                    "property": "margin-right",
                    "value": "10px"
                  }
                ]
              },
              {
                "selector": ".got-it-btn",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#4CAF50"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "5px 15px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  }
                ]
              }
            ],
          "CSS_Messages":  [
            "Write a body css with margin set to 0 and font-family set to 'Arial, sans-serif'",
            "Write a cookie-bar class with position set to 'fixed', bottom set to '0',left set to '0', right set to '0', background-color set to '#333', color set to 'white', padding set to '10px', text-align set to 'center', display set to 'flex, justify-content and align-items set to 'center'",
            "Write a cookie-text class with margin-right set to '10px'",
            "Write the got-it-btn class with background-color set to '#4CAF50', color set to 'white', border set to 'none', padding set to '5px 15px', cursor set to 'pointer' and font-size set to '14px'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/CookieConsentPopup.png"   
      },
      {
        "Page_Name":"Error-404",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a error-404 in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "error-container"
                    ]
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "error-header"
                    ]
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "error-message"
                    ]
                  }
                },
                {
                  "tag": "a",
                  "attributes": {
                    "href": "#",
                    "class": [
                      "back-home"
                    ]
                  }
                }
              ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Error-404'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name 'error-container' inside the <body> tag",
            "Write the <div> tag and the </div> tag with class name 'error-header' inside the <div> error-container class",
            "Write the <div> tag and the </div> tag with class name 'error-message' inside the <div> error-header class",
            "Write the <a> tag and the </a> tag with class name 'back-home' inside the <div> error-message class"
        ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#e74c3c"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  }
                ]
              },
              {
                "selector": ".error-container",
                "properties": [
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "max-width",
                    "value": "600px"
                  }
                ]
              },
              {
                "selector": ".error-header",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#c0392b"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "font-weight",
                    "value": "bold"
                  }
                ]
              },
              {
                "selector": ".error-message",
                "properties": [
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "font-size",
                    "value": "18px"
                  }
                ]
              },
              {
                "selector": ".back-home",
                "properties": [
                  {
                    "property": "display",
                    "value": "inline-block"
                  },
                  {
                    "property": "margin-top",
                    "value": "20px"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  },
                  {
                    "property": "border-bottom",
                    "value": "1px solid white"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin and padding set to 0, font-family set to Arial, sans-serif, backgound-color set to '#e74c3c', color set to 'white', display set to 'flex', justify-content and align-items set to 'center' and height set to '100vh'",
            "Write the error-container class with text-align set to 'center', width set to '100%' and maximum width set to '600px'",
            "Write the error-header class with background-color set to '#c0392b', padding set to '20px', font-size set to '24px' and font-weight set to 'bold'",
            "Write the error-message class with padding set to '20px', font-size set to '18px'",
            "Write the back-home class with display set to 'inline-block', margin-top set to '20px', color set to 'white', text-decoration set to 'none' and border-bottom set to '1px solid white'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/error-404.png"   
      },
      {
        "Page_Name":"Drag and Drop Files",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a drag and drop files in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "upload-container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "upload-area"
                  ]
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "class": [
                    "choose-files-btn"
                  ]
                }
              },
              {
                "tag": "span",
                "attributes": {
                  "class": [
                    "upload-text"
                  ]
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Drag and Drop Files'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'upload-container' inside the <body> tag",
            "Write the <div> tag and the </div> tag with class 'upload-area' inside the <div> tag class upload-container",
            "Write the <button> tag and the </button> with class name 'choose-files-btn' inside the <div> tag class upload-area",
            "Write the <span> tag and the </span> with class name 'upload-text' inside the <div> tag class upload-area"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background",
                    "value": "linear-gradient(to right, #f3e5f5, #e3f2fd, #e0f2f1)"
                  }
                ]
              },
              {
                "selector": ".upload-container",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "border-radius",
                    "value": "10px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 6px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".upload-area",
                "properties": [
                  {
                    "property": "border",
                    "value": "2px dashed #ccc"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  }
                ]
              },
              {
                "selector": ".choose-files-btn",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "10px 20px"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "color",
                    "value": "#666"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  }
                ]
              },
              {
                "selector": ".upload-text",
                "properties": [
                  {
                    "property": "color",
                    "value": "#999"
                  },
                  {
                    "property": "margin-left",
                    "value": "10px"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', display set top 'flex', justify-content  set to 'center', align-items set to 'center', helight set to '100vh' and background set to 'linear-gradient(to right, #f3e5f5, #e3f2fd, #e0f2f1)'",
            "Write the upload-container class with background-color set to 'white', padding set to '20px', border-radius set to '10px, box-shadow set to '0 4px 6px rgba(0, 0, 0, 0.1)' and text-align set to 'center'",
            "Write the upload-area class with border set to '2px dashed #ccc', border-radius set to '5px', padding set to '20px' and cursor set to 'pointer'",
            "Write the choode-file-btn class with background-color set to '#f0f0f0', border set to 'none', padding set to '10px 20px', border-radius set to '5px', color set to'#666', font-size set to '14px' and cursor set to'pointer'",
            "Write the upload-text class with color set to '#999', margin-left set to '10px' and font-size set to '14px'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/DragandDropFiles.png"   
      },
      {
        "Page_Name":"YouTube Video Embed",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a youtube video embed in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "video"
                  ]
                }
              },
              {
                "tag": "h1",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "video-container"
                  ]
                }
              },
              {
                "tag": "iframe",
                "attributes": {
                  "src": "https://www.youtube.com/embed/R0OD5F-WO9A?si=kTRQpPNbK7nK3YQm",
                  "frameborder": "0",
                  "allow": "accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",
                  "allowfullscreen": ""
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'YouTube Video Embed'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'video' inside the <body> tag",
            "Write the <h1> tag and the </h1> tag inside teh <div> class video",
            "Write the <div> tag and the </div> tag with class name as 'video-container' inside the <div> class video",
            "Write the <iframe> tag and the </iframe> tag with src set to 'https://www.youtube.com/embed/R0OD5F-WO9A?si=kTRQpPNbK7nK3YQm', frameborder set to '0', allow set to 'accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture' and make this field as allowfullscreen "
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f9f9f9"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": ".video-container",
                "properties": [
                  {
                    "property": "width",
                    "value": "80%"
                  },
                  {
                    "property": "max-width",
                    "value": "720px"
                  },
                  {
                    "property": "aspect-ratio",
                    "value": "16/9"
                  },
                  {
                    "property": "background-color",
                    "value": "#000"
                  },
                  {
                    "property": "border-radius",
                    "value": "8px"
                  },
                  {
                    "property": "overflow",
                    "value": "hidden"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 8px rgba(0, 0, 0, 0.2)"
                  }
                ]
              },
              {
                "selector": ".video-container iframe",
                "properties": [
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "height",
                    "value": "100%"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  }
                ]
              }
            ],
          "CSS_Messages": [
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', background-color set to '#f9f9f9', display set to 'flex', justify-content and align-items set to 'center' and height set to '100vh'",
            "Write the video-container class with width set to '80%', maximum width set to '720px', aspect-ratio set to '16/9', background-color set to '#000', border-radius set to '8px', overflow set to 'hidden' and box-shadow set to '0 4px 8px rgba(0, 0, 0, 0.2)'",
            "Write the video-container class 'iframe' with width set to '100%', height set to '100%', height set to '100%' and border set to 'none'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/YouTubeVideoEmbed.png"   
      },
      {
        "Page_Name":"Collapsible Panel",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a collapsible panel in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "checkbox",
                  "id": "toggle",
                  "class": [
                    "toggle"
                  ]
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "toggle",
                  "class": [
                    "collapsible-header"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "collapsible-content"
                  ]
                }
              },
              {
                "tag": "p",
                "attributes": {}
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Collapsible Panel'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <input> tag with type 'checkbox', id 'toggle' and class 'toggle' inside the body section",
            "Write the <label> tag and the </label> tag with for 'toggle' and class 'collapsible-header' inside the body section",
            "Write the <div> tag and the </div> tag with class 'collapsible-content' inside the body section",
            "Write the <p> tag and tha </p> tag inside teh <div> tag class collapsible-content"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  }
                ]
              },
              {
                "selector": ".toggle",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": ".collapsible-header",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "background-color",
                    "value": "#007bff"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  }
                ]
              },
              {
                "selector": ".collapsible-content",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 2px 4px rgba(0, 0, 0, 0.2)"
                  }
                ]
              },
              {
                "selector": ".toggle:checked + .collapsible-header + .collapsible-content",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              }
            ],
          "CSS_Messages": [
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif' and background-color set to '#f0f0f0'",
            "Write the toggle class with display set to 'none'",
            "Write the collapsible-header class with display set to 'block', padding set to '15px', background-color set to '#007bff', color set to 'white', cursor set to 'pointer', text-align set to 'center' and border-radius set to '5px'",
            "Write the collapsible-content class with display set to 'none', padding set to '15px, background-color set to 'white', border-radius set to '5px' and box-shadow set to '0 2px 4px rgba(0, 0, 0, 0.2)'",
            "Write the toggle:checked + collapsible-header + collapsible-content css with display set to 'block'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/CollapsiblePanel.png"   
      },
      {
        "Page_Name":"Profile Card",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a profile card in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "business-card"
                  ]
                }
              },
              {
                "tag": "h1",
                "attributes": {}
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "job"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "contact"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "id":"linkedin"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "id":"github"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Profile Card'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'business-card' inside the <body> tag",
            "Write the <h1> tag and the </h1> tag inside the <div> tag with class 'business-card'",
            "Write the <p> tag and the </p> tag with id 'job' inside the <div> tag class business-card",
            "Write the <p> tag and the </p> tag with id 'contact' inside the <div> tag class business-card",
            "Write the <a> tag and the </a> tag with id 'linkedin' inside the <div> tag class business-card",
            "Write the <a> tag and the </a> tag with id 'github' inside the <div> tag class business-card"
          ],   
            "CSS": [
              {
                "selector": ".business-card",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "width",
                    "value": "fit-content"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 8px rgba(0, 0, 0, 0.1)"
                  }
                ]
              },
              {
                "selector": ".business-card h1",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": ".business-card p",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "10px"
                  }
                ]
              },
              {
                "selector": ".business-card a",
                "properties": [
                  {
                    "property": "display",
                    "value": "inline-block"
                  },
                  {
                    "property": "margin-right",
                    "value": "10px"
                  },
                  {
                    "property": "color",
                    "value": "#3498db"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write the business-card class with background-color set to 'white', border-radius set to '5px', padding set to '20px', width set to 'fit-content' and box-shadow set to '0 4px 8px rgba(0, 0, 0, 0.1)'",
            "Write the business-card class 'h1' with margin set to '0'",
            "Write the business-card class 'p' with margin set to '0' and margin-bottom set to'10px'",
            "Write the business-card class 'a' with display set to 'inline-block', margin-right set to '10px', color set to '#3498db' and text-decoration set to 'none'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/ProfileCard.png"   
      },
      {
        "Page_Name":"Newsletter Subscription",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a newsletter subscription in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "newsletter"
                  ]
                }
              },
              {
                "tag": "h2",
                "attributes": {}
              },
              {
                "tag": "form",
                "attributes": {}
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "email"
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "email",
                  "id": "email",
                  "name": "email",
                  "placeholder": "Enter your email"
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "type": "submit"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Newsletter Subscription'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'newsletter' inside the body",
            "Write the <h2> tag and the </h2> tag inside the div class newsletter",
            "Write the <form> tag and the </form> tag inside the div class newsletter",
            "Write the <label> tag and the </label> tag inside the form tag with for attribute as 'email'",
            "Write the <input> tag inside the form tag with type as 'email', id and name as 'email', placeholder as 'Enter your email'",
            "Write the <button> tag and the </button> tag inside the form tag with type as 'submit'"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#f4f4f4"
                  }
                ]
              },
              {
                "selector": ".newsletter",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "border-radius",
                    "value": "8px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "width",
                    "value": "300px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".newsletter h2",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "1.8em"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "20px"
                  },
                  {
                    "property": "color",
                    "value": "#333"
                  }
                ]
              },
              {
                "selector": ".newsletter form",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "flex-direction",
                    "value": "column"
                  },
                  {
                    "property": "align-items",
                    "value": "stretch"
                  }
                ]
              },
              {
                "selector": ".newsletter label",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "1em"
                  },
                  {
                    "property": "text-align",
                    "value": "left"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "5px"
                  },
                  {
                    "property": "color",
                    "value": "#333"
                  }
                ]
              },
              {
                "selector": ".newsletter input[type=\"email\"]",
                "properties": [
                  {
                    "property": "padding",
                    "value": "10px"
                  },
                  {
                    "property": "font-size",
                    "value": "1em"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ddd"
                  },
                  {
                    "property": "border-radius",
                    "value": "4px"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "20px"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  }
                ]
              },
              {
                "selector": ".newsletter button",
                "properties": [
                  {
                    "property": "padding",
                    "value": "10px"
                  },
                  {
                    "property": "font-size",
                    "value": "1em"
                  },
                  {
                    "property": "background-color",
                    "value": "#007bff"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  },
                  {
                    "property": "border-radius",
                    "value": "4px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', display set to 'flex', justify-content and align-items set to 'center', height set to '100vh', and background-color set to '#f4f4f4'",
            "Write a newsletter class with backgreound-color set to 'white', padding set to '20px', border-radius set to '8px', box-shadow set to '0 0 10px rgba(0,0,0,0.1)', width set to '300px' and text-align set to 'center'",
            "Write a newsletter class 'h2' with font-size set to '1.8em', margin-bottom set to '20px' and color set to '#333'",
            "Write a newsletter class 'form' with display set to 'flex', flex-direction set to 'column' and align-items set to 'stretch'",
            "Write a newsletter class 'label' with font-size set to '1em', text-align set to 'left', margin-bottom set to '5px' and color set to '#333'",
            "Write a newsletter class 'input[type=\"email\"]' with padding set to '10px', font-size set to '1em', border set to '1px solid #ddd', border-radius set to '4px', margin-bottom set to '20px' and width set to '100%'",
            "Write a newsletter class 'button' with padding set to '10px', font-size set to '1em', background-color set to '#007bff', color set to 'white', border set to 'none', border-radius set to '4px', cursor set to 'pointer', width set to '100%'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/NewsletterSubscription.png"   
      },
      {
        "Page_Name":"CSS Grid Layout",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a css grid layout in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book4"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book5"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "box"
                  ],
                  "id": "book6"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and the </title> tag the head section and title the page as 'CSS Grid Layout'.",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag.",
            "Write a <div> and the </div> with a class 'grid-container'.",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book1 .",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book2 .",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book3 .",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book4 .",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book5 .",
            "Write a <div> inside a div with class name 'grid-container'and the </div> with a class 'box' and id 'book6 ."
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "white"
                  }
                ]
              },
              {
                "selector": ".grid-container",
                "properties": [
                  {
                    "property": "display",
                    "value": "grid"
                  },
                  {
                    "property": "grid-template-columns",
                    "value": "repeat(3, 1fr)"
                  },
                  {
                    "property": "gap",
                    "value": "10px"
                  },
                  {
                    "property": "max-width",
                    "value": "600px"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  }
                ]
              },
              {
                "selector": ".box",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ddd"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "font-size",
                    "value": "16px"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body CSS with font-family set to Arial, sans-serif, display set to flex, with the content centered both vertically and horizontally, height set to 100vh, background-color set to white and margin set to 0",        
            "Write a grid-container class with display set to grid, grid-template-columns set to repeat(3, 1fr), gap set to 10px, max width set to 600px and width set to 100%.",
            "Write a box class with background-color set to #f0f0f0, padding set to 20px, border set to 1px solid #ddd, font-size set to 16px and text-align set to center."
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/CSSGridLayout.png"   
      },
      {
        "Page_Name":"Coming Soon Page",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a coming soon page in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "coming-soon-container"
                    ]
                  }
                },
                {
                  "tag": "h1",
                  "attributes": {}
                },
                {
                  "tag": "p",
                  "attributes": {}
                },
                {
                  "tag": "form",
                  "attributes": {
                    "class": [
                      "subscribe-form"
                    ]
                  }
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "email"
                  }
                },
                {
                  "tag": "input",
                  "attributes": {
                    "type": "email",
                    "id": "email",
                    "placeholder": "Enter your email"
                  }
                },
                {
                  "tag": "button",
                  "attributes": {
                    "type": "submit"
                  }
                }
              ],
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Coming Soon'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'coming-soon-container'",
            "Write the <h1> tag and the </h1> tag inside the <div> tag",
            "Write the <p> tag and the </p> tag inside the <div> tag",
            "Write the <form> tag and the </form> tag inside the <div> tag with class name as 'subscribe-form'",
            "Write the <label> tag and the </label> tag inside the <form> tag with for attribute as 'email'",
            "Write the <input> tag inside the <form> tag with type and id as 'email' with placeholder as 'Enter your email'",
            "Write the <button> tag and the </button> tag inside the <form> tag with type as'submit'"
          ],
            "CSS":[
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "margin",
                      "value": "0"
                    },
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "background-color",
                      "value": "#333"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "display",
                      "value": "flex"
                    },
                    {
                      "property": "justify-content",
                      "value": "center"
                    },
                    {
                      "property": "align-items",
                      "value": "center"
                    },
                    {
                      "property": "height",
                      "value": "100vh"
                    }
                  ]
                },
                {
                  "selector": ".coming-soon-container",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "selector": ".coming-soon-container h1",
                  "properties": [
                    {
                      "property": "font-size",
                      "value": "48px"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "10px"
                    }
                  ]
                },
                {
                  "selector": ".coming-soon-container p",
                  "properties": [
                    {
                      "property": "font-size",
                      "value": "18px"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "20px"
                    }
                  ]
                },
                {
                  "selector": ".subscribe-form",
                  "properties": [
                    {
                      "property": "display",
                      "value": "inline-block"
                    }
                  ]
                },
                {
                  "selector": ".subscribe-form label",
                  "properties": [
                    {
                      "property": "margin-right",
                      "value": "10px"
                    },
                    {
                      "property": "font-size",
                      "value": "16px"
                    }
                  ]
                },
                {
                  "selector": ".subscribe-form input[type=\"email\"]",
                  "properties": [
                    {
                      "property": "padding",
                      "value": "8px"
                    },
                    {
                      "property": "font-size",
                      "value": "16px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "4px"
                    },
                    {
                      "property": "margin-right",
                      "value": "10px"
                    }
                  ]
                },
                {
                  "selector": ".subscribe-form button",
                  "properties": [
                    {
                      "property": "padding",
                      "value": "8px 15px"
                    },
                    {
                      "property": "font-size",
                      "value": "16px"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "background-color",
                      "value": "#007bff"
                    },
                    {
                      "property": "border",
                      "value": "none"
                    },
                    {
                      "property": "border-radius",
                      "value": "4px"
                    },
                    {
                      "property": "cursor",
                      "value": "pointer"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to Arial, sans-serif, background-color set to '#333', color set to 'white', display to 'flex', justify-content set to center, align the items to center and height set to '100vh'",
            "Write a coming-soon-container class with text-align set to center",
            "Write a coming-soon-container class 'h1' with font-size set to '48px' and margin-bottom set to '10px'",
            "Write a coming-soon-container class 'p' with font-size set to '18px and margin-bottom set to '20px'",
            "Write a subscribe-form class with display set to inline-block",
            "Write a subscribe-form class 'label' with margin right set to '10px' and font size set to '16px'",
            "Write a subscribe-form class 'input[type=\"email\"]' with padding set to '8px', font size set to '16px', border set to '1px solid #ccc', border radius set to '4px' and margin right to '10px'",
            "Write a subscribe-form class 'button' with padding set to '8px 15px', font size set to '16px', color set to 'white', background color set to '#007bff', border set to 'none', border radius set to '4px' and cursor to 'pointer"
    
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Comingsoonpage.png"   
      },
      {
        "Page_Name":"Book Review Page",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a book review in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "review-card"
                  ]
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "class": [
                    "review-heading"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "review-content"
                  ]
                }
              },
              {
                "tag": "h3",
                "attributes": {
                  "class": [
                    "book-title"
                  ]
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "class": [
                    "author"
                  ]
                }
              },
              {
                "tag": "strong",
                "attributes": {
                  "id": "author"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "class": [
                    "review"
                  ]
                }
              },
              {
                "tag": "strong",
                "attributes": {
                  "id": "review"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Book Review Page'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'review-card'",
            "Write the <h2> tag and the </h2> tag with a class name as 'review-heading' inside the div class review-card",
            "Write the <div> tag and the </div> tag with class name as 'review-content' inside the div class review-card",
            "Write the <h3> tag and the </h3> tag with class name 'book-title' inside the div class 'review-content'",
            "Write the <p> tag and the </p> tag with class name 'author' inside the div class 'review-content'",
            "Write the <strong> tag and the </strong> tag with id as 'author' inside the <p> class 'author'",
            "Write the <p> tag and the </p> tag with class name 'review' inside the div class 'review-content'",
            "Write the <strong> tag and the </strong> tag with id as 'review' inside the <p> class 'review'"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f8f9fa"
                  }
                ]
              },
              {
                "selector": ".review-card",
                "properties": [
                  {
                    "property": "width",
                    "value": "300px"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "background-color",
                    "value": "#fff"
                  },
                  {
                    "property": "border-radius",
                    "value": "10px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 8px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".review-heading",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "20px"
                  },
                  {
                    "property": "color",
                    "value": "#343a40"
                  }
                ]
              },
              {
                "selector": ".review-content",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#fff9e6"
                  },
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "border-left",
                    "value": "5px solid #ffa500"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "text-align",
                    "value": "left"
                  }
                ]
              },
              {
                "selector": ".book-title",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "20px"
                  },
                  {
                    "property": "color",
                    "value": "#007bff"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "10px"
                  }
                ]
              },
              {
                "selector": ".author, .review",
                "properties": [
                  {
                    "property": "margin",
                    "value": "5px 0"
                  }
                ]
              },
              {
                "selector": ".author strong",
                "properties": [
                  {
                    "property": "color",
                    "value": "#007bff"
                  }
                ]
              },
              {
                "selector": ".review strong",
                "properties": [
                  {
                    "property": "color",
                    "value": "#6f42c1"
                  }
                ]
              },
              {
                "selector": "p",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  },
                  {
                    "property": "color",
                    "value": "#333"
                  }
                ]
              }
            ]
            ,
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif',display set to flex, justify-content and align-items set to center, height set to '100vh' and background-color set to '#f8f9fa'",
            "Write a review-card class with width set to '300px', padding set to '20px', background-color set to '#fff', border-radius set to '10px', box-shadow set to '0 4px 8px rgba(0,0,0,0.1)' and text-align set to 'center'",
            "Write a review-heading class with font-size set to '24px', margin-bottom set to '20px' and color set to '#343a40'",
            "Write a review-content class with background-color set to '#fff9e6', padding set to '15px', border-left set o '5px solid #ffa500', border-radius set to '5px' and text-align set to 'left'",
            "Write a book-title class with font-size set to '20px', color set to '#007bff' and margin-bottom set to '10px'",
            "Write a author class 'review' class with margin set to '5px 0' ",
            "Write a author class 'strong' with color set to '#007bff'",
            "Write a review class 'strong' with color set to '#6f42c1'",
            "Write a p tag with margin set to '0', font-size set to '14px' and color set to'#333'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/bookreview.png"   
      },
      {
        "Page_Name":"Navbar ",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a top navigation bar in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "nav",
                "attributes": {
                  "class": [
                    "navbar"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "logo"
                  ]
                }
              },
              {
                "tag": "ul",
                "attributes": {
                  "class": [
                    "nav-links"
                  ]
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "class": [
                    "Home"
                  ]
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Home"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "class": [
                    "About"
                  ]
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#About"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "class": [
                    "Services"
                  ]
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Services"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "class": [
                    "Contact"
                  ]
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Contact"
                }
              }
            ],  
              "HTML_Messages": [
              "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
              "Write the <head> tag and the </head> tag inside the <html> section",
              "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
              "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
              "Write the <title> tag and the </title> tag inside the head section and title the page as 'Simple Navbar'",
              "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
              "Ensure that the <body> tag and </body> tag is written after the </head> tag",
              "Write the <nav> tag and the </nav> tag with the class name as 'navbar'",
              "Inside the <nav> section, write the <div> tag with the class name as 'logo' to update the website's logo",
              "Write the <ul> tag and the </ul> tag with a class name as 'nav-links' to create an unordered list of navigation links",
              "Write the first <li> tag with the class name as 'Home' the first navigation item",
              "Provide a 'href' attribute for the first <li> tag and set to '#Home'. This creates a hyperlink for the 'Home' navigation item",
              "Write the second <li> tag with the class name as 'About'.  This creates a hyperlink for the 'About' navigation item",
              "Provide a 'href' attribute for the second <li> tag and set to '#About'. This creates a hyperlink for the 'About' navigation item",
              "Write the third <li> tag with the class name as 'Services'.  This creates a hyperlink for the 'Services' navigation item",
              "Provide a 'href' attribute for the third <li> tag and set to '#Services'. This creates a hyperlink for the 'Services' navigation item",
              "Write the fourth <li> tag with the class name as 'Contact'.  This creates a hyperlink for the 'Contact' navigation item",
              "Provide a 'href' attribute for the fourth <li> tag and set to '#Contact'. This creates a hyperlink for the 'Contact' navigation item."
            ],
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  }
                ]
              },
              {
                "selector": ".navbar",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#333"
                  },
                  {
                    "property": "padding",
                    "value": "10px"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "space-between"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".logo",
                "properties": [
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "font-weight",
                    "value": "bold"
                  }
                ]
              },
              {
                "selector": ".nav-links",
                "properties": [
                  {
                    "property": "list-style",
                    "value": "none"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "gap",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".nav-links li",
                "properties": [
                  {
                    "property": "display",
                    "value": "inline"
                  }
                ]
              },
              {
                "selector": ".nav-links a",
                "properties": [
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  },
                  {
                    "property": "font-size",
                    "value": "18px"
                  }
                ]
              }
            ],
          "CSS_Messages": [
            "Write a body css with margin set to 0 and font-family set to Arial, sans-serif ",
            "Write a navbar class with background-color of #333, padding of 10px, display set to flex, justify-content set to space-between and align-items to center",
            "Write a logo class with color set to #fff, font-size of 24px and font-weight set to bold",
            "Write a nav-links class with list-style set to none, margin set to 0, padding set to 0, display set to flex and gap set to 20px for in between items.",
            "Write a nav-links class 'li', set the display to inline",
            "Write a nav-links class 'a' with color set to #fff, text-decoration set to none and font-size set to 18px"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Navbar.png"
      },
      {
        "Page_Name":"Dashboard Cards ",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a dashboard cards in HTML with CSS.\n Kindly write the HTML/CSS code according to the guidelines in the prerequisites section. A single HTML or CSS line is described by each criteria.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card"
                  ],
                  "id": "card1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-title"
                  ],
                  "id": "card1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-content"
                  ],
                  "id": "card1"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#",
                  "class": [
                    "read-more"
                  ],
                  "id": "card1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card"
                  ],
                  "id": "card2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-title"
                  ],
                  "id": "card2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-content"
                  ],
                  "id": "card2"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#",
                  "class": [
                    "read-more"
                  ],
                  "id": "card2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card"
                  ],
                  "id": "card3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-title"
                  ],
                  "id": "card3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-content"
                  ],
                  "id": "card3"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#",
                  "class": [
                    "read-more"
                  ],
                  "id": "card3"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Dashboard Cards'",
            "Write the <link> tag inside the head section and reference it to an external CSS stylesheet called 'styles.css'", 
            "Ensure that the <body> tag and the </body> tag are written after the </head> tag", 
            "Write the <div> tag and the </div> tag with the class name as 'card-container'", 
            "Write the <div> tag and the </div> tag with the class name as 'card' and the ID 'card1' to create an individual card that displays content", 
            "Write the <div> tag and the </div> tag with the class name as 'card-title' and the ID 'card1' to define the title section of the card", 
            "Write the <div> tag and the </div> tag with the class name as 'card-content' and the ID 'card1' to add the main content section of the card", 
            "Write the <a> tag with an href attribute value of '#card1' and the class name 'read-more' to create a link within the card", 
            "Write the <div> tag and the </div> tag with the class name as 'card' and the ID 'card2' to create another individual card that displays content", 
            "Write the <div> tag and the </div> tag with the class name as 'card-title' and the ID 'card2' to define the title section of the card", 
            "Write the <div> tag and the </div> tag with the class name as 'card-content' and the ID 'card2' to add the main content section of the card", 
            "Write the <a> tag with an href attribute value of '#card2' and the class name 'read-more' to create a link within the card", 
            "Write the <div> tag and the </div> tag with the class name as 'card' and the ID 'card3' to create a third individual card that displays content", 
            "Write the <div> tag and the </div> tag with the class name as 'card-title' and the ID 'card3' to define the title section of the card", 
            "Write the <div> tag and the </div> tag with the class name as 'card-content' and the ID 'card3' to add the main content section of the card",
            "Write the <a> tag with an href attribute value of '#card3' and the class name 'read-more' to create a link within the card"
          ],   
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  }
                ]
              },
              {
                "selector": ".card-container",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "gap",
                    "value": "20px"
                  },
                  {
                    "property": "max-width",
                    "value": "1000px"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  }
                ]
              },
              {
                "selector": ".card",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border-radius",
                    "value": "8px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 2px 4px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "overflow",
                    "value": "hidden"
                  },
                  {
                    "property": "flex",
                    "value": "1"
                  }
                ]
              },
              {
                "selector": ".card-title",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#007bff"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "font-size",
                    "value": "18px"
                  },
                  {
                    "property": "font-weight",
                    "value": "bold"
                  }
                ]
              },
              {
                "selector": ".card-content",
                "properties": [
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  }
                ]
              },
              {
                "selector": ".read-more",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "text-align",
                    "value": "right"
                  },
                  {
                    "property": "padding",
                    "value": "10px 15px"
                  },
                  {
                    "property": "color",
                    "value": "#007bff"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body CSS with font-family set to Arial, sans-serif, height set to 100vh, margin set to 0 and background-color set to '#f0f0f0'. Center the content both vertically and horizontally.",
            "Write a container class with display set to flex, gap set to 20px, maximum-width set to 1000px and width set to 100%.",
            "Write a card class with background-color set to white, border-radius set to 8px, box-shadow set to '0 2px 4px rgba(0,0,0,0.1)', overflow set to hidden and flex set to 1.",
            "Write a card-title class with background-color set to '#007bff', color set to white, padding set to 15px, font-size set to 18px and font-weight set to bold.",
            "Write a card-content class with padding set to 15px and font-size set to 14px.",
            "Write a read-more class with display set to block, text-align set to right, padding set to 10px 15px, color set to '#007bff', text-decoration set to none and font-size set to 14px."
        ]    
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/DashboardCards.png"   
      },
      {
        "Page_Name":"Event Invitation",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a event invitation in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "invitation-container"
                  ]
                }
              },
              {
                "tag": "h1",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "event-details"
                  ]
                }
              },
              {
                "tag": "h2",
                "attributes": {}
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "date"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "time"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "loc"
                }
              },
              {
                "tag": "form",
                "attributes": {
                  "class": [
                    "rsvp-form"
                  ]
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "name"
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "text",
                  "id": "name",
                  "name": "name"
                }
              },
              {
                "tag": "br",
                "attributes": {
                  "id": "name"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "email"
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "email",
                  "id": "email",
                  "name": "email"
                }
              },
              {
                "tag": "br",
                "attributes": {
                  "id": "email"
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "type": "submit"
                }
              }
            ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Event Invitation'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'invitation-container' inside the body",
            "Write the <h1> tag inside the div with class name as 'invitation-container'",
            "Write the <div> tag and the </div> tag with class name as 'event-details' inside the div class invitation-container",
            "Write the <h2> tag and the </h2> tag inside the div class event-details",
            "Write the <p> tag and the </p> tag with id as 'date' inside the div class event-details",
            "Write the <p> tag and the </p> tag with id as 'time' inside the div class event-details",
            "Write the <p> tag and the </p> tag with id as 'loc' inside the div class event-details",
            "Write the <form> tag and the </form> tag with the class name as 'rsvp-form' inside the div class invitation-container",
            "Write the <label> tag and the </label> tag with for attribute as 'name' inside the form class rsvp-form",
            "Write the <input> tag with type as 'text', name and id as 'name' inside the form class rsvp-form",
            "Write the <br> tag and the </br> tag with id as 'name' inside the form class rsvp-form",
            "Write the <label> tag and the </label> tag with for attribute as 'email' inside the form class rsvp-form",
            "Write the <input> tag with type as 'email', name and id as 'email' inside the form class rsvp-form",
            "Write the <br> tag and the </br> tag with id as 'email' inside form class rsvp-form",
            "Write the <button> tag and the </button> tag with type as 'submit' inside form class rsvp-form"
        ],   
            "CSS": [
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "display",
                      "value": "flex"
                    },
                    {
                      "property": "justify-content",
                      "value": "center"
                    },
                    {
                      "property": "align-items",
                      "value": "center"
                    },
                    {
                      "property": "height",
                      "value": "100vh"
                    },
                    {
                      "property": "margin",
                      "value": "0"
                    }
                  ]
                },
                {
                  "selector": ".invitation-container",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "white"
                    },
                    {
                      "property": "padding",
                      "value": "20px"
                    },
                    {
                      "property": "border-radius",
                      "value": "10px"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                    },
                    {
                      "property": "text-align",
                      "value": "center"
                    },
                    {
                      "property": "width",
                      "value": "300px"
                    }
                  ]
                },
                {
                  "selector": "h1",
                  "properties": [
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "background-color",
                      "value": "#7D3C98"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "border-radius",
                      "value": "10px 10px 0 0"
                    }
                  ]
                },
                {
                  "selector": ".event-details h2",
                  "properties": [
                    {
                      "property": "color",
                      "value": "#7D3C98"
                    }
                  ]
                },
                {
                  "selector": ".rsvp-form label",
                  "properties": [
                    {
                      "property": "color",
                      "value": "#7D3C98"
                    }
                  ]
                },
                {
                  "selector": ".rsvp-form input[type=\"text\"]",
                  "properties": [
                    {
                      "property": "width",
                      "value": "90%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin",
                      "value": "5px 0"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    }
                  ]
                },
                {
                  "selector": ".rsvp-form input[type=\"email\"]",
                  "properties": [
                    {
                      "property": "width",
                      "value": "90%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin",
                      "value": "5px 0"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    }
                  ]
                },
                {
                  "selector": ".rsvp-form button",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#7D3C98"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "border",
                      "value": "none"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    },
                    {
                      "property": "cursor",
                      "value": "pointer"
                    },
                    {
                      "property": "width",
                      "value": "100%"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', display set to flex, justify-content and align-items set to 'center' and height set to '100vh'",
            "Write a invitation-container class with background-color set to 'white', padding set to '20px', border-radius set to '10px', box-shadow set to '0 0 10px rgba(0, 0, 0, 0.1)', text-align set to 'center' and width set to '300px'",
            "Write h1 tag with color set to 'white', background-color set to '#7D3C98', padding set to '10px' and border-radius set to '10px 10px 0 0'",
            "Write the event-details class 'h2' with color set to '#7D3C98'",
            "Write the revp-form class 'label' with color set to '#7D3C98'",
            "Write the rsvp-form class 'input[type=\"text\"]' with width set to '90%', padding set to '10px', margin set to '5px 0', border set to '1px solid #ccc' and border-radius set to '5px'",
            "Write the rsvp-form class 'input[type=\"email\"]' with width set to '90%', padding set to '10px', margin set to '5px 0', border set to '1px solid #ccc' and border-radius set to '5px'",
            "Write the rsvp-form class 'input[type=\"submit\"]' with background-color set to '#7D3C98', color set to 'white', padding set to '10px', border set to 'none', border-radius set to '5px', cursor set to 'pointer' and width set to '100%'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Eventinvitation.png"   
      },
      {
        "Page_Name":"Fitness Tracker",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a fitness tracker in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "header",
                  "attributes": {}
                },
                {
                  "tag": "h1",
                  "attributes": {}
                },
                {
                  "tag": "nav",
                  "attributes": {}
                },
                {
                  "tag": "ul",
                  "attributes": {}
                },
                {
                  "tag": "li",
                  "attributes": {
                    "id": "Home"
                  }
                },
                {
                  "tag": "a",
                  "attributes": {
                    "href": "#Home"
                  }
                },
                {
                  "tag": "li",
                  "attributes": {
                    "id": "Workouts"
                  }
                },
                {
                  "tag": "a",
                  "attributes": {
                    "href": "#Workouts"
                  }
                },
                {
                  "tag": "li",
                  "attributes": {
                    "id": "Nutrition"
                  }
                },
                {
                  "tag": "a",
                  "attributes": {
                    "href": "#Nutrition"
                  }
                },
                {
                  "tag": "li",
                  "attributes": {
                    "id": "Contact"
                  }
                },
                {
                  "tag": "a",
                  "attributes": {
                    "href": "#Contact"
                  }
                },
                {
                  "tag": "main",
                  "attributes": {}
                },
                {
                  "tag": "section",
                  "attributes": {
                    "class": [
                      "workout"
                    ],
                    "id": "workout1"
                  }
                },
                {
                  "tag": "h2",
                  "attributes": {
                    "id": "workout1"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "id": "workout1"
                  }
                },
                {
                  "tag": "section",
                  "attributes": {
                    "class": [
                      "workout"
                    ],
                    "id": "workout2"
                  }
                },
                {
                  "tag": "h2",
                  "attributes": {
                    "id": "workout2"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "id": "workout2"
                  }
                },
                {
                  "tag": "footer",
                  "attributes": {}
                },
                {
                  "tag": "p",
                  "attributes": {}
                }
              ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Fitness Tracker'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <header> tag and the </header> tag  inside the <body> tag",
            "Write the <h1> tag and the </h1> tag inside the <header> tag",
            "Write the <nav> tag and the </nav> tag inside the <header> tag",
            "Write the <ul> tag and the </ul> tag inside the <nav> tag",
            "Write the <li> tag and the </li> tag with id 'Home' inside the <ul> tag",
            "Write the <a> tag and the </a> tag with href '#Home' inside the <li> tag with id Home",
            "Write the <li> tag and the </li> tag with id 'Workouts' inside the <ul> tag",
            "Write the <a> tag and the </a> tag with href '#Workouts' inside the <li> tag with id Workouts",
            "Write the <li> tag and the </li> tag with id 'Nutrition' inside the <ul> tag",
            "Write the <a> tag and the </a> tag with href '#Nutrition' inside the <li> tag  with id Nutrition",
            "Write the <li> tag and the </li> tag with id 'Contact' inside the <ul> tag",
            "Write the <a> tag and the </a> tag with href '#Contact' inside the <li> tag  with id Contact",
            "Write the <main> tag and the </main> tag inside the <body> tag",
            "Write the <section> tag and the </section> tag with class name as 'workout' and id as 'workout1' inside the <main> tag",
            "Write the <h2> tag and the </h2> tag with id as 'workout1' inside the <section> tag class workout",
            "Write the <p> tag and the </p> tag with id as 'workout1' inside the <section> tag class workout",
            "Write the <section> tag and the </section> tag with class name as 'workout' and id as 'workout2' inside the <main> tag",
            "Write the <h2> tag and the </h2> tag with id as 'workout2' inside the <section> tag class workout",
            "Write the <p> tag and the </p> tag with id as 'workout2' inside the <section> tag class workout",
            "Write the <footer> tag and the </footer> tag inside the <body> tag",
            "Write the <p> tag and the </p> tag insdie the <footer> tag"
        ],    
            "CSS":[
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "line-height",
                      "value": "1.6"
                    },
                    {
                      "property": "margin",
                      "value": "0"
                    },
                    {
                      "property": "padding",
                      "value": "0"
                    },
                    {
                      "property": "background-color",
                      "value": "#f0f0f0"
                    }
                  ]
                },
                {
                  "selector": "header",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#333"
                    },
                    {
                      "property": "color",
                      "value": "#fff"
                    },
                    {
                      "property": "padding",
                      "value": "1rem"
                    },
                    {
                      "property": "text-align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "selector": "nav ul",
                  "properties": [
                    {
                      "property": "list-style",
                      "value": "none"
                    },
                    {
                      "property": "padding",
                      "value": "0"
                    }
                  ]
                },
                {
                  "selector": "nav ul li",
                  "properties": [
                    {
                      "property": "display",
                      "value": "inline"
                    },
                    {
                      "property": "margin-right",
                      "value": "10px"
                    }
                  ]
                },
                {
                  "selector": "nav ul li a",
                  "properties": [
                    {
                      "property": "color",
                      "value": "#fff"
                    },
                    {
                      "property": "text-decoration",
                      "value": "none"
                    },
                    {
                      "property": "padding",
                      "value": "5px"
                    }
                  ]
                },
                {
                  "selector": "main",
                  "properties": [
                    {
                      "property": "display",
                      "value": "flex"
                    },
                    {
                      "property": "flex-wrap",
                      "value": "wrap"
                    },
                    {
                      "property": "justify-content",
                      "value": "space-around"
                    },
                    {
                      "property": "padding",
                      "value": "2rem"
                    }
                  ]
                },
                {
                  "selector": ".workout",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#fff"
                    },
                    {
                      "property": "padding",
                      "value": "1rem"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "2rem"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                    },
                    {
                      "property": "width",
                      "value": "300px"
                    },
                    {
                      "property": "text-align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "selector": ".workout p",
                  "properties": [
                    {
                      "property": "margin-bottom",
                      "value": "0.5rem"
                    }
                  ]
                },
                {
                  "selector": "footer",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#333"
                    },
                    {
                      "property": "color",
                      "value": "#fff"
                    },
                    {
                      "property": "text-align",
                      "value": "center"
                    },
                    {
                      "property": "padding",
                      "value": "1rem"
                    },
                    {
                      "property": "position",
                      "value": "fixed"
                    },
                    {
                      "property": "bottom",
                      "value": "0"
                    },
                    {
                      "property": "width",
                      "value": "100%"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin and padding set to 0, font-family set to 'Arial, sans-serif', line-heigth set to '1.6' and background-color set to'#f0f0f0'",
            "Write a header css with background-color set to '#333', color set to '#fff', padding set to '1rem' and text-align set to 'center'",
            "Write the 'nav' tag and the 'ul' tag with list-style set to 'none and padding set to '0'",
            "Write the 'nav' tag 'ul' tag and 'li' tag with display set to 'inline' and margion-right set to '10px'",
            "Write the 'nav' tag 'ul' tag and 'li' tag and 'a' tag with color set to '#fff', text-decoration set to 'none' and padding set to'5px'",
            "Write the 'main' tag with display set to 'flex', flex-wrap set to 'wrap', justifyy-content set to 'space-between' and padding set to '2rem'",
            "Write the 'workout' class with background-color set to '#fff', padding set to '1rem', margin-bottom set to '2rem', box-shadow set to '0 0 10px rgba(0, 0, 0, 0.1)', width set to '300px' and text-align set to 'center'",
            "Write the workout class 'p' with margin-bottom set to '0.5rem'",
            "Write the footer tag with background-color set to '#333', color set to '#fff', text-align set to 'center', padding set to '1rem', position set to 'fixed', bottom set to '0' and width set to '100%'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/fitnesstracker.png"   
      },
      {
        "Page_Name":"Vertical Tabs",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a vertical tabs in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "tab-container"
                  ]
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "radio",
                  "id": "tab1",
                  "name": "tab",
                  "checked": ""
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "tab1",
                  "class": [
                    "tab-btn"
                  ]
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "radio",
                  "id": "tab2",
                  "name": "tab"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "tab2",
                  "class": [
                    "tab-btn"
                  ]
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "radio",
                  "id": "tab3",
                  "name": "tab"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "tab3",
                  "class": [
                    "tab-btn"
                  ]
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "radio",
                  "id": "tab4",
                  "name": "tab"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "tab4",
                  "class": [
                    "tab-btn"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "tab-content"
                  ],
                  "id": "content1"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "content1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "content1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "tab-content"
                  ],
                  "id": "content2"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "content2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "content2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "tab-content"
                  ],
                  "id": "content3"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "content3"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "content3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "tab-content"
                  ],
                  "id": "content4"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "content4"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "content4"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Vertical Tabs'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'tab-container' inside the body section",
            "Write the <input> tag with type 'radio', id 'tab1', name 'tab' and make this field checked inside the <div> class tab-container",
            "Write the <label> tag and the </label> tag with for attribute 'tab1' and class 'tab-btn' inside the <div> class tab-container",
            "Write the <input> tag with type 'radio', id 'tab2', name 'tab' and make this field checked inside the <div> class tab-container",
            "Write the <label> tag and the </label> tag with for attribute 'tab2' and class 'tab-btn' inside the <div> class tab-container",
            "Write the <input> tag with type 'radio', id 'tab3', name 'tab' and make this field checked inside the <div> class tab-container",
            "Write the <label> tag and the </label> tag with for attribute 'tab3' and class 'tab-btn' inside the <div> class tab-container",
            "Write the <input> tag with type 'radio', id 'tab4', name 'tab' and make this field checked inside the <div> class tab-container",
            "Write the <label> tag and the </label> tag with for attribute 'tab4' and class 'tab-btn' inside the <div> class tab-container",
            "Write the <div> tag and the </div> tag with class 'tab-content' and id 'content1' inside the <div> tag class tab-container",
            "Write the <h2> tag and the </h2> tag with id 'content1' inside the <div> tag tab-content",
            "Write the <p> tag and the </p> tag with id 'content1' inside the <div> tag tab-content",
            "Write the <div> tag and the </div> tag with class 'tab-content' and id 'content2' inside teh <div> tag class tab-container",
            "Write the <h2> tag and the </h2> tag with id 'content2' inside the <div> tag tab-content",
            "Write the <p> tag and the </p> tag with id 'content2' inside the <div> tag tab-content",        
            "Write the <div> tag and the </div> tag with class 'tab-content' and id 'content3' inside teh <div> tag class tab-container",
            "Write the <h2> tag and the </h2> tag with id 'content3' inside the <div> tag tab-content",
            "Write the <p> tag and the </p> tag with id 'content3' inside the <div> tag tab-content", 
            "Write the <div> tag and the </div> tag with class 'tab-content' and id 'content4' inside teh <div> tag class tab-container",
            "Write the <h2> tag and the </h2> tag with id 'content4' inside the <div> tag tab-content",
            "Write the <p> tag and the </p> tag with id 'content4' inside the <div> tag tab-content"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#f4f4f4"
                  }
                ]
              },
              {
                "selector": ".tab-container",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "flex-direction",
                    "value": "column"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "background-color",
                    "value": "#fff"
                  }
                ]
              },
              {
                "selector": ".tab-container input[type=\"radio\"]",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": ".tab-btn",
                "properties": [
                  {
                    "property": "padding",
                    "value": "15px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  },
                  {
                    "property": "background-color",
                    "value": "#f1f1f1"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ddd"
                  },
                  {
                    "property": "text-align",
                    "value": "left"
                  },
                  {
                    "property": "transition",
                    "value": "background-color 0.3s, color 0.3s"
                  }
                ]
              },
              {
                "selector": ".tab-btn:hover",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#ddd"
                  }
                ]
              },
              {
                "selector": ".tab-btn:hover + .tab-content",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              },
              {
                "selector": ".tab-content",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "background-color",
                    "value": "#fff"
                  }
                ]
              },
              {
                "selector": "#tab1:checked ~ #content1",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              },
              {
                "selector": "#tab2:checked ~ #content2",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              },
              {
                "selector": "#tab3:checked ~ #content3",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              },
              {
                "selector": "#tab4:checked ~ #content4",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', padding set to '0' and background-color set to '#f4f4f4'",
            "Write the tab-container class with display set top 'flex', flex-direction set to 'column', height set to '100vh' and background-color set to '#fff'",
            "Write the tab-container class 'input[type=\"radio\"] with display set to 'none'",
            "Write the tab-btn class with padding set to '15px', cursor set to 'pointer', background-color set to '#f1f1f1', border set to '1px solid #ddd', text-align set to 'left' and transwition set to 'background-color 0.3s, color 0.3s'",
            "Write the tab-btn:hover css with background-color set to '#ddd'",
            "Write the tab-btn:hover + tab-content css with display set to 'block'",
            "Write the tab-content class with display set to 'none', padding set to '20px' and background-color set to '#fff'",
            "Write the #tab1:checked ~ #content1 with display set to 'block'",
            "Write the #tab2:checked ~ #content2 with display set to 'block'",
            "Write the #tab3:checked ~ #content3 with display set to 'block'",
            "Write the #tab4:checked ~ #content4 with display set to 'block'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/VerticalTabs.png"   
      },
      {
        "Page_Name":"PersonalPortfolio",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a personal portfolio in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "header",
                "attributes": {}
              },
              {
                "tag": "h1",
                "attributes": {}
              },
              {
                "tag": "nav",
                "attributes": {}
              },
              {
                "tag": "ul",
                "attributes": {}
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "about"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#about"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "projects"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#projects"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "contact"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#contact"
                }
              },
              {
                "tag": "section",
                "attributes": {
                  "id": "about"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "about"
                }
              },
              {
                "tag": "p",
                "attributes": {}
              },
              {
                "tag": "section",
                "attributes": {
                  "id": "projects"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "projects"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "project"
                  ],
                  "id": "project1"
                }
              },
              {
                "tag": "h3",
                "attributes": {
                  "id": "project1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "project1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "project"
                  ],
                  "id": "project2"
                }
              },
              {
                "tag": "h3",
                "attributes": {
                  "id": "project2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "project2"
                }
              },
              {
                "tag": "section",
                "attributes": {
                  "id": "contact"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "contact"
                }
              },
              {
                "tag": "form",
                "attributes": {}
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "name"
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "text",
                  "id": "name",
                  "name": "name"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "email"
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "email",
                  "id": "email",
                  "name": "email"
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "message"
                }
              },
              {
                "tag": "textarea",
                "attributes": {
                  "id": "message",
                  "name": "message",
                  "rows": "5"
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "type": "submit"
                }
              }
            ],
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'My Portfolio'.",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag.",
            "Write the <header> tag and the </header> tag inside the <body> section.",
            "Write the <h1> tag and the </h1> tag inside the header section",
            "Write the <nav> tag and the </nav> tag inside the header section",
            "Write the <ul> tag and the </ul> tag inside the nav section to create an unordered list of navigation links",
            "Write the first <li> tag with the id as 'about' the first navigation item",
            "Provide a 'href' attribute for the first <li> tag and set to '#about'. This creates a hyperlink for the 'about' navigation item",
            "Write the second <li> tag with the id as 'projects'.  This creates a hyperlink for the 'projects' navigation item",
            "Provide a 'href' attribute for the second <li> tag and set to '#projects'. This creates a hyperlink for the 'projects' navigation item",
            "Write the third <li> tag with the id as 'contact'.  This creates a hyperlink for the 'contact' navigation item",
            "Provide a 'href' attribute for the fourth <li> tag and set to '#contact'. This creates a hyperlink for the 'contact' navigation item.",
            "Write the <section> tag and the </section> tag inside the <body> section and give the id as 'about'",
            "Write the <h2> tag and the </h2> tag inside the section and give the id as 'about'",
            "Write the <p> tag and the </p> tag inside the section and give the id as 'about'",
            "Write the <section> tag and the </section> tag inside the <body> section and give the id as 'projects'",
            "Write the <h2> tag and the </h2> tag inside the section and give the id as 'projects'",
            "Write the <div> tag and the </div> tag inside the section and give the class name as 'project' and id as 'project1'",
            "Write the <h3> tag and the </h3> tag inside the div tag and give the id as'project1'",
            "Write the <p> tag and the </p> tag inside the div tag and give the id as 'project1'",
            "Write the <div> tag and the </div> tag inside the section and give the class name as 'project' and id as 'project2'",
            "Write the <h3> tag and the </h3> tag inside the div tag and give the id as'project2'",
            "Write the <p> tag and the </p> tag inside the div tag and give the id as 'project2'",
            "Write the <section> tag and the </section> tag inside the <body> section and give the id as 'contact'",
            "Write the <h2> tag and the </h2> tag inside the section and give the id as 'contact'",
            "Write the <form> tag and the </form> tag inside the section",
            "Write the <label> tag and the </label> tag inside the form and give the for attribute as 'name'",
            "Write the <input> tag inside the form and give the type as 'text', name as 'name' and the id as 'name'",
            "Write the <label> tag and the </label> tag inside the form and give the for attribute as 'email'",
            "Write the <input> tag inside the form and give the type as 'email', name as 'email' and the id as 'email'",
            "Write the <label> tag and the </label> tag inside the form and give the for attribute as 'message'",
            "Write the <textarea> tag and the </textarea> tag inside the form, give the id as 'message' name as 'message' and rows as 5",
            "Write the <button> tag and the </button> tag inside the form and give the type as 'submit'"
        ],    
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "line-height",
                    "value": "1.6"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": "header",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#333"
                  },
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "padding",
                    "value": "1rem"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "space-between"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": "header h1",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": "nav ul",
                "properties": [
                  {
                    "property": "list-style",
                    "value": "none"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": "nav ul li",
                "properties": [
                  {
                    "property": "display",
                    "value": "inline"
                  },
                  {
                    "property": "margin-right",
                    "value": "1rem"
                  }
                ]
              },
              {
                "selector": "nav ul li a",
                "properties": [
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": "section",
                "properties": [
                  {
                    "property": "padding",
                    "value": "2rem"
                  }
                ]
              },
              {
                "selector": "form",
                "properties": [
                  {
                    "property": "max-width",
                    "value": "400px"
                  },
                  {
                    "property": "margin",
                    "value": "0 auto"
                  }
                ]
              },
              {
                "selector": "label",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "1rem"
                  }
                ]
              },
              {
                "selector": "input",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "1rem"
                  }
                ]
              },
              {
                "selector": "textarea",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "1rem"
                  }
                ]
              },
              {
                "selector": "button",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "1rem"
                  },
                  {
                    "property": "background-color",
                    "value": "#333"
                  },
                  {
                    "property": "color",
                    "value": "#fff"
                  },
                  {
                    "property": "padding",
                    "value": "0.5rem 1rem"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin and padding set to 0, font-family set to Arial, sans-serif and line-height set to '1.6",
            "Write the header css with background color set to '#fff', color set to '#fff', padding set to '1rem', display set to 'flex', justify the contents set to space between and align the items to center",
            "Write a header tag 'h1' with set the margin to 0",
            "Write a nav tag 'ul' with set the margin and padding to 0 and list style to none",
            "Write a nav tag 'ul' tag 'li' with set the display to inline-block and margin right set to '1rem'",
            "Write a nav tag 'ul' tag 'li' tag 'a' with set the color to '#fff' and text decoration to 'none",
            "Write a section css with set the padding to '2rem'",
            "Write the form css with maximum width set to '400px' and margin set to '0 auto'",
            "Write the label css with block display, width set to '100%' and margin bottom set to '1rem'",
            "Write the input css with block display, width set to '100%' and margin bottom set to '1rem'",
            "Write the textarea css with block display, width set to '100%' and margin bottom set to '1rem'",
            "Write the button css with block display, width set to '100%', margin bottom set to '1rem' background color set to '#333', color set to '#fff' padding set to '0.5rem 1rem' , border set to 'none' and cursor set to 'pointer'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/PersonalPortfolio.png"   
      },
      {
        "Page_Name":"3D Card Flip",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a 3D card flip in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-front"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "card-back"
                  ]
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as '3D Card Flip'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'card' inside the <body> tag",
            "Write the <div> tag and the </div> tag with class 'card-front' inside the <div> tag class card",
            "Write the <div> tag and the </div> tag with class 'card-back' inside the <div> tag class card"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  }
                ]
              },
              {
                "selector": ".card",
                "properties": [
                  {
                    "property": "width",
                    "value": "200px"
                  },
                  {
                    "property": "height",
                    "value": "200px"
                  },
                  {
                    "property": "position",
                    "value": "relative"
                  },
                  {
                    "property": "perspective",
                    "value": "600px"
                  }
                ]
              },
              {
                "selector": ".card-front",
                "properties": [
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "height",
                    "value": "100%"
                  },
                  {
                    "property": "position",
                    "value": "absolute"
                  },
                  {
                    "property": "backface-visibility",
                    "value": "hidden"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ccc"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 6px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "border-radius",
                    "value": "10px"
                  },
                  {
                    "property": "background-color",
                    "value": "##0000FF"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "transition",
                    "value": "transform 0.6s"
                  }
                ]
              },
              {
                "selector": ".card-back",
                "properties": [
                  {
                    "property": "width",
                    "value": "100%"
                  },
                  {
                    "property": "height",
                    "value": "100%"
                  },
                  {
                    "property": "position",
                    "value": "absolute"
                  },
                  {
                    "property": "backface-visibility",
                    "value": "hidden"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ccc"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 6px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "border-radius",
                    "value": "10px"
                  },
                  {
                    "property": "background-color",
                    "value": "#00F"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "transform",
                    "value": "rotatey(180deg)"
                  },
                  {
                    "property": "transition",
                    "value": "transform 0.6s"
                  }
                ]
              },
              {
                "selector": ".card:hover .card-front",
                "properties": [
                  {
                    "property": "transform",
                    "value": "rotatey(180deg)"
                  }
                ]
              },
              {
                "selector": ".card:hover .card-back",
                "properties": [
                  {
                    "property": "transform",
                    "value": "rotatey(360deg)"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', display set to 'flex', justify-content set to 'center', align-items set to 'center', height set to '100vh' and background-color set to '#f0f0f0'",
            "Write the card class with width set to '200px', height set to '200px', position set to 'relative' and perspective set to '600px'",
            "Write the card-front class with width set to '100%', height set to '100%', position set to 'absolute', backface-visibility set to 'hidden', display set to 'flex' justify-content set to 'center', align-items set to 'center', font-size set to '24px', border set to '1px solid #ccc', box-shadow set to '0 4px 6px rgba(0, 0, 0, 0.1)', border-radius set to '10px', background-color set to '#0000FF', color set to 'white' and transition set to 'transform 0.6s'",
            "Write the card-back class with width set to '100%', height set to '100%', position set to 'absolute', backface-visibility set to 'hidden', display set to 'flex' justify-content set to 'center', align-items set to 'center', font-size set to '24px', border set to '1px solid #ccc', box-shadow set to '0 4px 6px rgba(0, 0, 0, 0.1)', border-radius set to '10px', background-color set to '#0000FF', color set to 'white', transform set to rotatey(180deg) and transition set to 'transform 0.6s'",
            "Write the card:hover card-front class with transform set to 'rotatey(180deg)'",
            "Write the card:hover card-back class with transform set to 'rotatey(360deg)'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/3DCardFlip.png"   
      },
      {
        "Page_Name":"Responsive Grid Layout",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a responsive grid layout in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item4"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item5"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "grid-item"
                  ],
                  "id": "item6"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Responsive Grid Layout'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with the class name 'grid-container' inside the body section",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item1' inside the <div> tag class grid-container",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item2' inside the <div> tag class grid-container",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item3' inside the <div> tag class grid-container",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item4' inside the <div> tag class grid-container",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item5' inside the <div> tag class grid-container",
            "Write the <div> tag and the </div> tag with class name 'grid-item' and id 'item6' inside the <div> tag class grid-container"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "box-sizing",
                    "value": "border-box"
                  }
                ]
              },
              {
                "selector": ".grid-container",
                "properties": [
                  {
                    "property": "display",
                    "value": "grid"
                  },
                  {
                    "property": "grid-template-columns",
                    "value": "repeat(auto-fit, minmax(150px, 1fr))"
                  },
                  {
                    "property": "gap",
                    "value": "10px"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "background-color",
                    "value": "#f4f4f4"
                  }
                ]
              },
              {
                "selector": ".grid-item",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#3498db"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "border-radius",
                    "value": "8px"
                  },
                  {
                    "property": "font-size",
                    "value": "1.2rem"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', padding set to '0' and box-sizing set to 'border-box'",
            "Write the grid-container class with display set to 'grid', grid-template-columns set to 'repeat(auto-fit, minmax(150px, 1fr))', gap set to '10px', padding set to '20px' and background-color set to '#f4f4f4'",
            "Write the grid-item class with background-color set to '#3498db', color set to 'white', padding set to '20px', text-align set to 'center', border-radius '8px' and font-size set to '1.2rem'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/responsivegridlayout.png"   
      }, {
        "Page_Name":"Feedback Form",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a feedback form in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "form",
                  "attributes": {
                    "class": [
                      "feedback-form"
                    ]
                  }
                },
                {
                  "tag": "h1",
                  "attributes": {}
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "name"
                  }
                },
                {
                  "tag": "input",
                  "attributes": {
                    "type": "text",
                    "id": "name",
                    "name": "name",
                    "placeholder": "Enter your name"
                  }
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "email"
                  }
                },
                {
                  "tag": "input",
                  "attributes": {
                    "type": "email",
                    "id": "email",
                    "name": "email",
                    "placeholder": "Enter your email"
                  }
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "feedback"
                  }
                },
                {
                  "tag": "textarea",
                  "attributes": {
                    "id": "feedback",
                    "name": "feedback",
                    "placeholder": "Enter your feedback here"
                  }
                },
                {
                  "tag": "button",
                  "attributes": {
                    "type": "submit"
                  }
                }
              ],
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Feedback Form'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <form> tag and the </form> with the class name as 'feedback-form' inside the body",
            "Write the <h1> tag and the </h1> tag inside the form class 'feedback-form'",
            "Write the <label> tag and the </label> tag with for attribute as 'name' inside the form class 'feedback-form'",
            "Write the <input> tag with type as 'text', id as 'name', name as 'name', placeholder as 'Enter your name' inside the form class 'feedback-form'",
            "Write the <label> tag and the </label> tag with for attribute as 'email' inside the form class 'feedback-form'",
            "Write the <input> tag with type as 'email', id as 'email', name as 'email' and placeholder as 'Enter your email' inside the form class feedback-form",
            "Write the <label> tag and the </label> tag with for attribute as 'feedback' inside the form class feedback-form",
            "Write the <textarea> tag and the </textarea> tag with id as 'feedback', name as 'feedback' and placeholder as 'Enter your feedback here' inside the form class feedback-form",
            "Write the <button> tag and the </button> tag with type as 'submit'"
        ],    
            "CSS": [
                {
                  "selector": ".feedback-form",
                  "properties": [
                    {
                      "property": "max-width",
                      "value": "600px"
                    },
                    {
                      "property": "margin",
                      "value": "auto"
                    },
                    {
                      "property": "padding",
                      "value": "20px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "10px"
                    },
                    {
                      "property": "background-color",
                      "value": "#f9f9f9"
                    }
                  ]
                },
                {
                  "selector": ".feedback-form h1",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "center"
                    }
                  ]
                },
                {
                  "selector": ".feedback-form label",
                  "properties": [
                    {
                      "property": "display",
                      "value": "block"
                    },
                    {
                      "property": "margin-top",
                      "value": "10px"
                    }
                  ]
                },
                {
                  "selector": ".feedback-form input",
                  "properties": [
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin-top",
                      "value": "5px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    }
                  ]
                },
                {
                  "selector": ".feedback-form textarea",
                  "properties": [
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin-top",
                      "value": "5px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ccc"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    }
                  ]
                },
                {
                  "selector": ".feedback-form button",
                  "properties": [
                    {
                      "property": "display",
                      "value": "block"
                    },
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin-top",
                      "value": "20px"
                    },
                    {
                      "property": "background-color",
                      "value": "#4CAF50"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "border",
                      "value": "none"
                    },
                    {
                      "property": "border-radius",
                      "value": "5px"
                    },
                    {
                      "property": "cursor",
                      "value": "pointer"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a feedback-form class with maximum width set to '600px', margin set to 'auto', padding set to '20px', border set to '1px solid #ccc', border-radius set to '10px' and background-color set to '#f9f9f9'",
            "Write the feedback-form class 'h1' with text-align set to 'center'",
            "Write the feedback-form class 'label' with display set to block' and margin-top set to '10px'",
            "Write the feedback-formn class 'input' with width set to '100%', padding set to '10px', margin-top set to '5px',border set to '1px solid #ccc' and border-radius set to '5px'",
            "Write feedback-form class 'textarea' with width set to '100%', padding set to '10px', margin-top set to '5px',border set to '1px solid #ccc' and border-radius set to '5px'",
            "Write the feedback-form class 'button' with display set to 'block', width set to '100%', padding set to '10px', margin-top set to '10px, background-color set to '#4CAF50', color set to 'white', border set to 'none', border-radius set to '5px' and cursor set to 'pointer'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Surveyform.png"   
      },{
        "Page_Name":"Service Page",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a service Page in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "services-section"
                    ]
                  }
                },
                {
                  "tag": "h2",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "services-container"
                    ]
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "service-box"
                    ],
                    "id": "service1"
                  }
                },
                {
                  "tag": "h3",
                  "attributes": {
                    "id": "service1"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "id": "service1"
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "service-box"
                    ],
                    "id": "service2"
                  }
                },
                {
                  "tag": "h3",
                  "attributes": {
                    "id": "service2"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "id": "service2"
                  }
                }
              ],
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Our Services'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'service-section'",
            "Write the <h2> tag and the </h2> tag inside the <div> tag",
            "Write the <div> tag and the </div> tag with the class name as 'service-container' inside the div class 'service-section'",
            "Write the <div> tag and the </div> tag with the class name as 'service-box' and the id as 'service1'",
            "Write the <h3> tag and the </h3> tag inside the div class 'service-box' with id as 'service1'",
            "Write the <p> tag and the </p> with id as 'service1' inside the div class 'service-container'",
            "Write the <div> tag and the </div> tag with the class name as 'service-box' with id as 'service2' inside the div class 'service-section'",
            "Write the <h3> tag and the </h3> tag inside the div class 'service-box' with the id as 'service2'",
            "Write the <p> tag and the </p> with id as 'service2'"
        ],    
            "CSS": [
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "margin",
                      "value": "0"
                    },
                    {
                      "property": "padding",
                      "value": "0"
                    },
                    {
                      "property": "background-color",
                      "value": "#f4f4f4"
                    }
                  ]
                },
                {
                  "selector": ".services-section",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "center"
                    },
                    {
                      "property": "padding",
                      "value": "50px"
                    },
                    {
                      "property": "background-color",
                      "value": "#008080"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    }
                  ]
                },
                {
                  "selector": ".services-section h2",
                  "properties": [
                    {
                      "property": "margin-bottom",
                      "value": "30px"
                    },
                    {
                      "property": "font-size",
                      "value": "24px"
                    }
                  ]
                },
                {
                  "selector": ".services-container",
                  "properties": [
                    {
                      "property": "display",
                      "value": "flex"
                    },
                    {
                      "property": "justify-content",
                      "value": "center"
                    },
                    {
                      "property": "gap",
                      "value": "20px"
                    }
                  ]
                },
                {
                  "selector": ".service-box",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "white"
                    },
                    {
                      "property": "color",
                      "value": "black"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ddd"
                    },
                    {
                      "property": "padding",
                      "value": "20px"
                    },
                    {
                      "property": "width",
                      "value": "250px"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                    }
                  ]
                },
                {
                  "selector": ".service-box h3",
                  "properties": [
                    {
                      "property": "margin-bottom",
                      "value": "10px"
                    },
                    {
                      "property": "font-size",
                      "value": "18px"
                    }
                  ]
                },
                {
                  "selector": ".service-box p",
                  "properties": [
                    {
                      "property": "margin",
                      "value": "0"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin and padding set to 0, font-family set to Arial, sans-serif and background-color set to '#f4f4f4'",
            "Write a service-section class with align text to center, padding set to '50px', background-color set to '#008080' and color set to 'white'",
            "Write a service-section class 'h2' with margin-bottom set to '30px' and font size to '24px'",
            "Write a service-container class with display set to 'flex', justify-content set to center and gap set to '20px'",
            "Write a service-box class with background-color set to 'white', color set to 'black', border set to '1px solid #ddd', padding set to '20px', width set to '250px' and box-shadow set to '0 0 10px rgbs(0,0,0,0.1)'",
            "Write a service-box class 'h3' with margin-bottom set to '10px' and font-size set to '10px'",
            "Write a service-box class 'p' with margin set to '0'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Ourservices.png"   
      },
      {
        "Page_Name":"ContactUs",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a contact us in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
                {
                  "tag": "html",
                  "attributes": {
                    "lang": "en"
                  }
                },
                {
                  "tag": "head",
                  "attributes": {}
                },
                {
                  "tag": "meta",
                  "attributes": {
                    "charset": "utf-8"
                  }
                },
                {
                  "tag": "meta",
                  "attributes": {
                    "name": "viewport",
                    "content": "width=device-width, initial-scale=1.0"
                  }
                },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "contact-form"
                    ]
                  }
                },
                {
                  "tag": "h2",
                  "attributes": {}
                },
                {
                  "tag": "form",
                  "attributes": {}
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "name"
                  }
                },
                {
                  "tag": "input",
                  "attributes": {
                    "type": "text",
                    "id": "name",
                    "name": "name"
                  }
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "email"
                  }
                },
                {
                  "tag": "input",
                  "attributes": {
                    "type": "email",
                    "id": "email",
                    "name": "email"
                  }
                },
                {
                  "tag": "label",
                  "attributes": {
                    "for": "message"
                  }
                },
                {
                  "tag": "textarea",
                  "attributes": {
                    "id": "message",
                    "name": "message"
                  }
                },
                {
                  "tag": "button",
                  "attributes": {
                    "type": "submit"
                  }
                }
              ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Contact Us'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'contact-form'",
            "Write the <h2> tag and the </h2> tag inside teh <div> class 'contact-form'",
            "Write the <form> tag and the </form> tag inside the <div> class 'contact-form'",
            "Write the <label> tag and the </label> tag and the for attribute as 'name' inside the <form> tag",
            "Write the <input> tag type as 'text', id as 'name', name as 'name",
            "Write the <label> tag and the </label> tag and the for attribute as 'email'",
            "Write the <input> tag type as 'email',id as 'email', name as 'email'",
            "Write the <label> tag and the </label> tag and the for attribute as 'message'",
            "Write the <textarea> tag and the </textarea> tag with id as 'message', name as 'message'",
            "Write the <button> tag and the </button> tag with type as 'submit'"
          ],   
            "CSS":[
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "display",
                      "value": "flex"
                    },
                    {
                      "property": "justify-content",
                      "value": "center"
                    },
                    {
                      "property": "align-items",
                      "value": "center"
                    },
                    {
                      "property": "height",
                      "value": "100vh"
                    },
                    {
                      "property": "margin",
                      "value": "0"
                    },
                    {
                      "property": "background-color",
                      "value": "#f0f0f0"
                    }
                  ]
                },
                {
                  "selector": ".contact-form",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "white"
                    },
                    {
                      "property": "padding",
                      "value": "20px"
                    },
                    {
                      "property": "border-radius",
                      "value": "8px"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                    },
                    {
                      "property": "width",
                      "value": "300px"
                    }
                  ]
                },
                {
                  "selector": ".contact-form h2",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "center"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "background-color",
                      "value": "#7E57C2"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "margin",
                      "value": "-20px -20px 20px -20px"
                    },
                    {
                      "property": "border-radius",
                      "value": "8px 8px 0 0"
                    }
                  ]
                },
                {
                  "selector": ".contact-form label",
                  "properties": [
                    {
                      "property": "display",
                      "value": "block"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "5px"
                    },
                    {
                      "property": "color",
                      "value": "#333"
                    }
                  ]
                },
                {
                  "selector": ".contact-form input",
                  "properties": [
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "8px"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "15px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ddd"
                    },
                    {
                      "property": "border-radius",
                      "value": "4px"
                    },
                    {
                      "property": "box-sizing",
                      "value": "border-box"
                    }
                  ]
                },
                {
                  "selector": ".contact-form textarea",
                  "properties": [
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "8px"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "15px"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ddd"
                    },
                    {
                      "property": "border-radius",
                      "value": "4px"
                    },
                    {
                      "property": "box-sizing",
                      "value": "border-box"
                    },
                    {
                      "property": "height",
                      "value": "100px"
                    },
                    {
                      "property": "resize",
                      "value": "vertical"
                    }
                  ]
                },
                {
                  "selector": ".contact-form button",
                  "properties": [
                    {
                      "property": "width",
                      "value": "100%"
                    },
                    {
                      "property": "padding",
                      "value": "10px"
                    },
                    {
                      "property": "background-color",
                      "value": "#7E57C2"
                    },
                    {
                      "property": "color",
                      "value": "white"
                    },
                    {
                      "property": "border",
                      "value": "none"
                    },
                    {
                      "property": "border-radius",
                      "value": "4px"
                    },
                    {
                      "property": "cursor",
                      "value": "pointer"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin set to 0,font-family set to Arial, sans-serif, display set to 'flex, justify-content and align-items set to 'center', height set to '100vh' and background-color set to '#f0f0f0'",
            "Write a contact-form class css background-color set to 'white', padding set to '20px', border-radius set to '8px', border-shadow to '0 0 10px rgba(0,0,0,0.1)' and width set to '300px'",
            "Write a contact-form class 'h2' text-align set to 'center', color to 'white', background-color set to '#7E57C2', padding set to '10px', margin set to '-20px -20px 20px -20px' and border-radius set to '8px 8px 0 0'",
            "Write a contact-form class 'label' display set to 'block', margin-bottom set to '5px' and color set to '#333'",
            "Write a contact-form class 'input' width set to '100%', padding set to '8px', margin-bottom set to '15px', border set to '1px solid #ddd', border-radius set to '4px' and box-sizing set to 'border-box'",
            "Write a contact-form class 'textarea' width set to '100%', padding set to '8px', margin-bottom set to '15px', border set to '1px solid #ddd' border-radius set to '4px', box-sizing set to 'border-box', height set to '100px' and resize set to 'vertical'",
            "Write a contact-form class 'button' width set to '100%', padding set to '10px',background-color set to '#7E57C2', color set to 'white', border set to 'none', border-radius set to '4px' and cursor set to 'pointer'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/contactus.png"   
      },
      {
        "Page_Name":"Testimonials",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a testimonials in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
                {
                  "tag": "title",
                  "attributes": {}
                },
                {
                  "tag": "link",
                  "attributes": {
                    "rel": [
                      "stylesheet"
                    ],
                    "href": "styles.css"
                  }
                },
                {
                  "tag": "body",
                  "attributes": {}
                },
                {
                  "tag": "section",
                  "attributes": {
                    "class": [
                      "testimonials"
                    ]
                  }
                },
                {
                  "tag": "h2",
                  "attributes": {}
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "testimonial-card"
                    ],
                    "id": "card1"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-text"
                    ],
                    "id": "card1"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-author"
                    ],
                    "id": "card1"
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "testimonial-card"
                    ],
                    "id": "card2"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-text"
                    ],
                    "id": "card2"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-author"
                    ],
                    "id": "card2"
                  }
                },
                {
                  "tag": "div",
                  "attributes": {
                    "class": [
                      "testimonial-card"
                    ],
                    "id": "card3"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-text"
                    ],
                    "id": "card3"
                  }
                },
                {
                  "tag": "p",
                  "attributes": {
                    "class": [
                      "testimonial-author"
                    ],
                    "id": "card3"
                  }
                }
              ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Testimonials'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <section> tag and the </section> tag with class name 'testimonials'",
            "Write the <h2> tag and the </h2> inside the testimonial section",
            "Write the <div> tag and the </div> tag inside the <section> testimonials with class name as 'testimonial-card' and id as 'card1'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-text' and id as 'card1'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-author' and id as 'card1'",
            "Write the <div> tag and the </div> tag inside the <section> testimonials with class name as 'testimonial-card' and id as 'card2'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-text' and id as 'card2'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-author' and id as 'card2'",
            "Write the <div> tag and the </div> tag inside the <section> testimonials with class name as 'testimonial-card' and id as 'card3'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-text' and id as 'card3'",
            "Write the <p> tag and the </p> inside the <div> testimonial-card with class name as 'testimonial-author' and id as 'card3'"
        ],
            "CSS":[
                {
                  "selector": "body",
                  "properties": [
                    {
                      "property": "font-family",
                      "value": "Arial, sans-serif"
                    },
                    {
                      "property": "background-color",
                      "value": "#f0f8ff"
                    },
                    {
                      "property": "margin",
                      "value": "0"
                    },
                    {
                      "property": "padding",
                      "value": "0"
                    }
                  ]
                },
                {
                  "selector": ".testimonials",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#fff"
                    },
                    {
                      "property": "padding",
                      "value": "2rem"
                    },
                    {
                      "property": "margin",
                      "value": "2rem auto"
                    },
                    {
                      "property": "max-width",
                      "value": "800px"
                    },
                    {
                      "property": "border-radius",
                      "value": "8px"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 0 10px rgba(0, 0, 0, 0.1)"
                    },
                    {
                      "property": "border-top",
                      "value": "5px solid #007bff"
                    }
                  ]
                },
                {
                  "selector": ".testimonials h2",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "center"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "1.5rem"
                    },
                    {
                      "property": "color",
                      "value": "#007bff"
                    }
                  ]
                },
                {
                  "selector": ".testimonial-card",
                  "properties": [
                    {
                      "property": "background-color",
                      "value": "#f9f9f9"
                    },
                    {
                      "property": "border",
                      "value": "1px solid #ddd"
                    },
                    {
                      "property": "border-radius",
                      "value": "8px"
                    },
                    {
                      "property": "padding",
                      "value": "1rem"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "1rem"
                    },
                    {
                      "property": "box-shadow",
                      "value": "0 4px 8px rgba(0, 0, 0, 0.1)"
                    }
                  ]
                },
                {
                  "selector": ".testimonial-text",
                  "properties": [
                    {
                      "property": "font-style",
                      "value": "italic"
                    },
                    {
                      "property": "color",
                      "value": "#555"
                    },
                    {
                      "property": "margin-bottom",
                      "value": "0.5rem"
                    }
                  ]
                },
                {
                  "selector": ".testimonial-author",
                  "properties": [
                    {
                      "property": "text-align",
                      "value": "right"
                    },
                    {
                      "property": "font-weight",
                      "value": "bold"
                    },
                    {
                      "property": "color",
                      "value": "#007bff"
                    }
                  ]
                }
              ],
          "CSS_Messages":[
            "Write a body css with margin and padding set to 0, font-family set to Arial, sans-serif and background-color set to '#f0f8ff' ",
            "Write a testimonials class with background-color set to '#fff', padding set to '2rem', margin set to '2rem auto', max-width set to '800px', border-radius set to '8px', box-shadow set to '0 0 10px rgba(0, 0, 0, 0.1)' and border-top set to '5px solid #007bff'",
            "Write a testimonials class 'h2' with text-align set to 'center', margin-bottom set to '1.5rem' and color set to '#007bff'",
            "Write a testimonials-card class with background-color set to '#f9f9f9', border set to '1px solid #ddd', border-radius set to '8px', padding set to '1rem', margin-bottom set to '1rem' and box-shadow set to '0 4px 8px rgba(0,0,0,0.1)'",
            "Write a testimonial-text class with font-style set to 'italic', color set to '#555' and margin-bottom set to '0.5rem'",
            "Write a testimonial-author class with text-align set to 'right', font-weight set to 'bold' and color set to '#007bff'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/Testimonials.png"   
      },
      {
        "Page_Name":"Skewed Sections",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a skewed sections in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "section",
                "attributes": {
                  "class": [
                    "skewed-section",
                    "skewed-section-1"
                  ],
                  "id": "skew1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "content"
                  ],
                  "id": "skew1"
                }
              },
              {
                "tag": "h1",
                "attributes": {
                  "id": "skew1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "skew1"
                }
              },
              {
                "tag": "section",
                "attributes": {
                  "class": [
                    "skewed-section",
                    "skewed-section-2"
                  ],
                  "id": "skew2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "content"
                  ],
                  "id": "skew2"
                }
              },
              {
                "tag": "h1",
                "attributes": {
                  "id": "skew2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "skew2"
                }
              },
              {
                "tag": "section",
                "attributes": {
                  "class": [
                    "skewed-section",
                    "skewed-section-3"
                  ],
                  "id": "skew3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "content"
                  ],
                  "id": "skew3"
                }
              },
              {
                "tag": "h1",
                "attributes": {
                  "id": "skew3"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "skew3"
                }
              }
            ],  
          "HTML_Messages":  [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Skewed Sections'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <section> tag and the </section> tag with class 'skewed-section, skewed-section-1' and id 'skew1' inside the body section",
            "Write the <div> tag and the </div> tag with class 'content' and id 'skew1' inside the section tag",
            "Write the <h1> tag and the </h1> tag with id 'skew1' inside the section tag",
            "Write the <p> tag and the </p> tag with id 'skew1' inside the section tag",
            "Write the <section> tag and the </section> tag with class 'skewed-section, skewed-section-2' and id 'skew2' inside the body section",
            "Write the <div> tag and the </div> tag with class 'content' and id 'skew2' inside the section tag",
            "Write the <h1> tag and the </h1> tag with id 'skew2' inside the section tag",
            "Write the <p> tag and the </p> tag with id 'skew2' inside the section tag",
            "Write the <section> tag and the </section> tag with class 'skewed-section, skewed-section-3' and id 'skew3' inside the body section",
            "Write the <div> tag and the </div> tag with class 'content' and id 'skew3' inside the section tag",
            "Write the <h1> tag and the </h1> tag with id 'skew3' inside the section tag",
            "Write the <p> tag and the </p> tag with id 'skew3' inside the section tag"     
          ],   
            "CSS":[
              {
                "selector": "*",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  }
                ]
              },
              {
                "selector": ".skewed-section",
                "properties": [
                  {
                    "property": "position",
                    "value": "relative"
                  },
                  {
                    "property": "height",
                    "value": "300px"
                  },
                  {
                    "property": "overflow",
                    "value": "hidden"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": ".skewed-section-1",
                "properties": [
                  {
                    "property": "background",
                    "value": "#3498db"
                  },
                  {
                    "property": "transform",
                    "value": "skewy(-10deg)"
                  }
                ]
              },
              {
                "selector": ".skewed-section-2",
                "properties": [
                  {
                    "property": "background",
                    "value": "#e74c3c"
                  },
                  {
                    "property": "transform",
                    "value": "skewy(10deg)"
                  }
                ]
              },
              {
                "selector": ".skewed-section-3",
                "properties": [
                  {
                    "property": "background",
                    "value": "#2ecc71"
                  },
                  {
                    "property": "transform",
                    "value": "skewy(-10deg)"
                  }
                ]
              },
              {
                "selector": ".skewed-section .content",
                "properties": [
                  {
                    "property": "transform",
                    "value": "skewy(10deg)"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".skewed-section-2 .content",
                "properties": [
                  {
                    "property": "transform",
                    "value": "skewy(-10deg)"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a * css with margin set to 0, font-family set to 'Arial, sans-serif' and padding set to 0",
            "Write the skewewd-section class with position set to 'relative', height set to '300px', overflow set to 'hidden', color set to 'white', display set to 'flex', align-items set to 'center', justify-content set to 'center' and text-align set to 'center'",
            "Write the skewed-section-1 class with background set to '#3498db' and transform set to 'skewy(-10deg)'",
            "Write the skewed-section-2 class with background set to '#e74c3c' and transform set to 'skewy(10deg)'",
            "Write the skewed-section-3 class with background set to '#2ecc71' and transform set to 'skewy(-10deg)'",
            "Write the skewed-section and content class with transform set to 'skewy(10deg)' and padding set to '20px'",
            "Write the skewed-section-2 and content class with transform set to 'skewy(-10deg)'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/SkewedSections.png"   
      },
      {
        "Page_Name":"Expanding Menu",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a expanding menu in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "nav",
                "attributes": {
                  "class": [
                    "menu"
                  ]
                }
              },
              {
                "tag": "input",
                "attributes": {
                  "type": "checkbox",
                  "id": "menu-toggle",
                  "class": [
                    "menu-toggle"
                  ]
                }
              },
              {
                "tag": "label",
                "attributes": {
                  "for": "menu-toggle",
                  "class": [
                    "menu-label"
                  ]
                }
              },
              {
                "tag": "ul",
                "attributes": {
                  "class": [
                    "menu-items"
                  ]
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Home"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Home"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "About"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#About"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Services"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Services"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Contact"
                }
              },
              {
                "tag": "a",
                "attributes": {
                  "href": "#Contact"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Expanding Menu'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <nav> tag and the </nav> tag with calss name 'menu' inside the <body> tag",
            "Write the <input> tag with type 'checkbox', id 'menu-toggle' and class name 'menu-toggle' inside the <nav> tag class menu",
            "Write the <label> tag and the </label> tag with for attribute 'menu-toggle' and class name 'menu-label' inside the <nav> tag class menu",
            "Write the <ul> tag and the </ul> tag with class name 'menu-items' inside the <nav> tag class menu",
            "Write the <li> tag and the </li> tag with id 'Home' inside the <ul> tag calss menu-items",
            "Write the <a> tag and tha </a> tag with href '#Home' inside the <li> tag id Home",
            "Write the <li> tag and the </li> tag with id 'About' inside the <ul> tag calss menu-items",
            "Write the <a> tag and tha </a> tag with href '#About' inside the <li> tag id About",
            "Write the <li> tag and the </li> tag with id 'Services' inside the <ul> tag calss menu-items",
            "Write the <a> tag and tha </a> tag with href '#Services' inside the <li> tag id Services",
            "Write the <li> tag and the </li> tag with id 'Contact' inside the <ul> tag calss menu-items",
            "Write the <a> tag and tha </a> tag with href '#Contact' inside the <li> tag id Contact"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".menu",
                "properties": [
                  {
                    "property": "position",
                    "value": "relative"
                  },
                  {
                    "property": "width",
                    "value": "200px"
                  }
                ]
              },
              {
                "selector": ".menu-items",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  },
                  {
                    "property": "list-style",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "overflow",
                    "value": "hidden"
                  }
                ]
              },
              {
                "selector": ".menu-items li",
                "properties": [
                  {
                    "property": "border-bottom",
                    "value": "1px solid #0062cc"
                  }
                ]
              },
              {
                "selector": ".menu-items li:last-child",
                "properties": [
                  {
                    "property": "border-bottom",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": ".menu-items a",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "padding",
                    "value": "10px 15px"
                  },
                  {
                    "property": "text-decoration",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": ".menu-items a:hover",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#0056b3"
                  }
                ]
              },
              {
                "selector": ".menu-toggle",
                "properties": [
                  {
                    "property": "display",
                    "value": "none"
                  }
                ]
              },
              {
                "selector": ".menu-label",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  },
                  {
                    "property": "background-color",
                    "value": "#007bff"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "10px 15px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  }
                ]
              },
              {
                "selector": ".menu-toggle:checked ~ .menu-items",
                "properties": [
                  {
                    "property": "display",
                    "value": "block"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif',background-color set to '#f0f0f0' and padding set to '20px'",
            "Write the menu class with position set to 'relative' and width set to '200px'",
            "Write the menu-items class with display set to 'none', list-style set to 'none', padding set to '0', margin set to '0', border-radius set to '5px' and overflow set to 'hidden'",
            "Write the menu-items class 'li' with border-bottom set to '1px solid #0062cc'",
            "Write the menu-items class 'li:last-child' set to border-bottom set to 'none'",
            "Write the menu-items class 'a' with display set to 'block', padding set to '10px 15px' and text-decoration set to 'none'",
            "Write the menu-items class 'a:hover' with background-color set to '#0056b3'",
            "Write the menu-toggle class with display set to 'none'",
            "Write the menu-label class with display set to 'block', background-color set to '#007bff', color set to 'white', padding set to '10px 15px', text-align set to 'center', border-radius set to '5px' and cursor set to 'pointer'",
            "Write the menu-toggle:checked ~ .menu-items class with display set to 'block'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/ExpandingMenu.png"   
      },
      {
        "Page_Name":"JobListing",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a job listing in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "job-listings"
                  ]
                }
              },
              {
                "tag": "h1",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "job"
                  ],
                  "id": "job1"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "job1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "job1"
                }
              },
              {
                "tag": "strong",
                "attributes": {
                  "id": "job1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "job1"
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "id": "job1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "job"
                  ],
                  "id": "job2"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "job2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "job2"
                }
              },
              {
                "tag": "strong",
                "attributes": {
                  "id": "job2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "job2"
                }
              },
              {
                "tag": "button",
                "attributes": {
                  "id": "job2"
                }
              }
            ],  
          "HTML_Messages":[
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Job Listing'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'job-listing' inside the <body> tag",
            "Write the <h1> tag and the </h1> tag inside the <div> job-listing class",
            "Write the <div> tag and the </div> tag with class name as 'job' and id as 'job1' inside the <div> tag class job-listing",
            "Write the <h2> tag and the </h2> tag inside the <div> class job with the id as 'job1'",
            "Write the <p> tag and the </p> tag inside the <div> class job with the id as 'job1'",
            "Write the <strong> tag and the </strong> tag inside the <div> class job with id as 'job1'",
            "Write the <p> tag and the </p> tag inside the <div> class job with the id as 'job1'",
            "Write the <button> tag and the </button> tag inside the <div> class job with the id as 'job1'",
            "Write the <div> tag and the </div> tag with class name as 'job' and id as 'job2' inside the <div> tag class job-listing",
            "Write the <h2> tag and the </h2> tag inside the <div> class job with the id as 'job2'",
            "Write the <p> tag and the </p> tag inside the <div> class job with the id as 'job2'",
            "Write the <strong> tag and the </strong> tag inside the <div> class job with id as 'job2'",
            "Write the <p> tag and the </p> tag inside the <div> class job with the id as 'job2'",
            "Write the <button> tag and the </button> tag inside the <div> class job with the id as 'job2'"
        ],    
            "CSS":[
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "background-color",
                    "value": "#f4f4f4"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".job-listings",
                "properties": [
                  {
                    "property": "max-width",
                    "value": "600px"
                  },
                  {
                    "property": "margin",
                    "value": "0 auto"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  }
                ]
              },
              {
                "selector": "h1",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#ff5722"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "20px"
                  },
                  {
                    "property": "border-radius",
                    "value": "4px 4px 0 0"
                  }
                ]
              },
              {
                "selector": ".job",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border",
                    "value": "1px solid #ddd"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "margin-bottom",
                    "value": "20px"
                  },
                  {
                    "property": "border-radius",
                    "value": "4px"
                  }
                ]
              },
              {
                "selector": ".job h2",
                "properties": [
                  {
                    "property": "margin-top",
                    "value": "0"
                  },
                  {
                    "property": "font-size",
                    "value": "1.5em"
                  },
                  {
                    "property": "color",
                    "value": "#333"
                  }
                ]
              },
              {
                "selector": ".job p",
                "properties": [
                  {
                    "property": "margin",
                    "value": "10px 0"
                  },
                  {
                    "property": "color",
                    "value": "#555"
                  }
                ]
              },
              {
                "selector": "button",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "#ff5722"
                  },
                  {
                    "property": "color",
                    "value": "white"
                  },
                  {
                    "property": "border",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "10px 20px"
                  },
                  {
                    "property": "cursor",
                    "value": "pointer"
                  },
                  {
                    "property": "font-size",
                    "value": "1rem"
                  },
                  {
                    "property": "border-radius",
                    "value": "4px"
                  },
                  {
                    "property": "margin-top",
                    "value": "10px"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to Arial, sans-serif, padding set to '20px', and background-color set to '#f4f4f4'",
            "Write the job-listings class with max-width set to '600px', margin set to '0 auto' and text-align set to 'center'",
            "Write the 'h1' with background-color set to '#ff5722', color set to 'white', padding set to '20px', margin-bottom set to '20px' and border-radius set to '4px 4px 0 0'",
            "Write the job class with background-color set to'white', border set to '1px solid #ddd', padding set to '20px', margin-bottom set to '20px' and border-radius set to '4px'",
            "Write the job class 'h2' withmargin-top set to '0', font-size set to '1.5rem', and color set to '#333'",
            "Write the job class 'p' with margin set to '10px 0' and color set to '#555'",
            "Write the button with 'background-color set to '#ff5722', color set to 'white', border set to 'none', padding set to '10px 20px', cursor set to 'pointer', font-size set to '1rem', boreder-radius set to '4px' and margin-top set to '10px'"
        ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/JobListing.png"   
      },
      {
        "Page_Name":"Pricing Table",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a pricing table in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "pricing-container"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "plan"
                  ],
                  "id": "Basic"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "Basic"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "class": [
                    "price"
                  ],
                  "id": "Basic"
                }
              },
              {
                "tag": "ul",
                "attributes": {
                  "id": "Basic"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Basic1"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Basic2"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Basic3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "plan"
                  ],
                  "id": "pro"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "pro"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "class": [
                    "price"
                  ],
                  "id": "pro"
                }
              },
              {
                "tag": "ul",
                "attributes": {
                  "id": "pro"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "pro1"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "pro2"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "pro3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "plan"
                  ],
                  "id": "Premium"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                   "id": "Premium"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "class": [
                    "price"
                  ],
                  "id": "Premium"
                }
              },
              {
                "tag": "ul",
                "attributes": {
                  "id": "Premium"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Premium1"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Premium2"
                }
              },
              {
                "tag": "li",
                "attributes": {
                  "id": "Premium3"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Pricing Table'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class 'pricing-container' inside the body section",
            "Write the <div> tag and the </div> tag with class 'plan' and id 'Basic' inside the <div> tag class 'pricing-container'",
            "Write the <h2> tag and </h2> tag with id 'Basic' inside the <div> tag class plan",
            "Write the <p> tag and the </p> tag with class name 'price' and id 'Basic'inside the <div> tag class plan",
            "Write the <ul> tag and the </ul> tag with id 'Basic' inside the <div> tag class plan",
            "Write the <li> tag and the </li> tag with id 'Basic1' inside the <ul> tag id Basic",
            "Write the <li> tag and the </li> tag with id 'Basic2' inside the <ul> tag id Basic",
            "Write the <li> tag and the </li> tag with id 'Basic3' inside the <ul> tag id Basic",
            "Write the <div> tag and the </div> tag with class 'plan' and id 'pro' inside the <div> tag class 'pricing-container'",
            "Write the <h2> tag and </h2> tag with id 'pro' inside the <div> tag class plan",
            "Write the <p> tag and the </p> tag with class name 'price' and id 'pro'inside the <div> tag class plan",
            "Write the <ul> tag and the </ul> tag with id 'pro' inside the <div> tag class plan",
            "Write the <li> tag and the </li> tag with id 'pro1' inside the <ul> tag id pro",
            "Write the <li> tag and the </li> tag with id 'pro2' inside the <ul> tag id pro",
            "Write the <li> tag and the </li> tag with id 'pro3' inside the <ul> tag id pro",
            "Write the <div> tag and the </div> tag with class 'plan' and id 'Premium' inside the <div> tag class 'pricing-container'",
            "Write the <h2> tag and </h2> tag with id 'Premium' inside the <div> tag class plan",
            "Write the <p> tag and the </p> tag with class name 'price' and id 'Premium'inside the <div> tag class plan",
            "Write the <ul> tag and the </ul> tag with id 'Premium' inside the <div> tag class plan",
            "Write the <li> tag and the </li> tag with id 'Premium1' inside the <ul> tag id Premium",
            "Write the <li> tag and the </li> tag with id 'Premium2' inside the <ul> tag id Premium",
            "Write the <li> tag and the </li> tag with id 'Premium3' inside the <ul> tag id Premium"
        ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f0f0f0"
                  },
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "justify-content",
                    "value": "center"
                  },
                  {
                    "property": "align-items",
                    "value": "center"
                  },
                  {
                    "property": "height",
                    "value": "100vh"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": ".pricing-container",
                "properties": [
                  {
                    "property": "display",
                    "value": "flex"
                  },
                  {
                    "property": "gap",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".plan",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border-radius",
                    "value": "10px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 4px 8px rgba(0, 0, 0, 0.1)"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  },
                  {
                    "property": "text-align",
                    "value": "center"
                  },
                  {
                    "property": "width",
                    "value": "200px"
                  }
                ]
              },
              {
                "selector": ".plan h2",
                "properties": [
                  {
                    "property": "margin-top",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": ".price",
                "properties": [
                  {
                    "property": "font-size",
                    "value": "24px"
                  },
                  {
                    "property": "color",
                    "value": "#333"
                  }
                ]
              },
              {
                "selector": "ul",
                "properties": [
                  {
                    "property": "list-style-type",
                    "value": "none"
                  },
                  {
                    "property": "padding",
                    "value": "0"
                  }
                ]
              },
              {
                "selector": "li",
                "properties": [
                  {
                    "property": "margin",
                    "value": "10px 0"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', background-color set to'#f0f0f0', display set to 'flex', justify-content set to 'center', align-items set to 'center' and height set to '100vh'",
            "Write the pricing-container class with display set to 'flex' and gap set to '20px'",
            "Write the plan class with background-color set to 'white', border-radius set to '10px', box-shadow set to '0 4px 8px rgba(0, 0, 0, 0.1)', padding set to '20px', text-align set to 'center' and width set to '200px'",
            "Write the plan class 'h2' with margin-top set to '0'",
            "Write the price class with font-size set to '24px' and color set to '#333'",
            "Write the ul css with list-style-type set to 'none' and padding set to '0'",
            "Write the li css with margin set to '10px 0'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/PricingTable.png"   
      },
      {
        "Page_Name":"Project Timeline",
        "Tabs":["HTML","CSS"],
        "Qn":"Learn how to create a project timeline in HTML with CSS.\nPlease follow the instructions provided under the requirements section and write the HTML/CSS code. Each requirement describes one line in HTML/CSS.",
        "Code_Validation": {
            "HTML":[
              {
                "tag": "html",
                "attributes": {
                  "lang": "en"
                }
              },
              {
                "tag": "head",
                "attributes": {}
              },
              {
                "tag": "meta",
                "attributes": {
                  "charset": "utf-8"
                }
              },
              {
                "tag": "meta",
                "attributes": {
                  "name": "viewport",
                  "content": "width=device-width, initial-scale=1.0"
                }
              },
              {
                "tag": "title",
                "attributes": {}
              },
              {
                "tag": "link",
                "attributes": {
                  "rel": [
                    "stylesheet"
                  ],
                  "href": "styles.css"
                }
              },
              {
                "tag": "body",
                "attributes": {}
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline"
                  ]
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item1"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item1"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item1"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item2"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item2"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item2"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item3"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item3"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item3"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item3"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item4"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item4"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item4"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item4"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item5"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item5"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item5"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item5"
                }
              },
              {
                "tag": "div",
                "attributes": {
                  "class": [
                    "timeline-item"
                  ],
                  "id": "item6"
                }
              },
              {
                "tag": "h2",
                "attributes": {
                  "id": "item6"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item6"
                }
              },
              {
                "tag": "p",
                "attributes": {
                  "id": "item6"
                }
              }
            ],  
          "HTML_Messages": [
            "Ensure that the <html> tag and the </html> tag has been correctly written and set the value of lang to 'en'",
            "Write the <head> tag and the </head> tag inside the <html> section",
            "Write the <meta> tag with the charset as 'utf-8' inside the head tag",
            "Write the <meta> tag with the name as 'viewport' and the content to 'width=device-width, initial-scale=1.0' inside the head tag",
            "Write the <title> tag and </title> tag inside the head section and title the page as 'Project Timeline'",
            "Write the <link> tag inside the head section and reference it to an external css stylesheet called 'styles.css'",
            "Ensure that the <body> tag and </body> tag is written after the </head> tag",
            "Write the <div> tag and the </div> tag with class name as 'timeline' inside the <body> tag",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item1' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item1' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item1' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item1' inside the <div> tag class timeline-item",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item2' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item2' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item2' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item2' inside the <div> tag class timeline-item",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item3' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item3' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item3' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item3' inside the <div> tag class timeline-item",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item4' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item14 inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item4' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item4' inside the <div> tag class timeline-item",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item5' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item5' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item5' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item5' inside the <div> tag class timeline-item",
            "Write the <div> tag and the </div> tag with class name as 'timeline-item' and id as 'item6' inside the <div> tag class 'timeline'",
            "Write the <h2> tag and the </h2> tag with id as 'item6' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item6' inside the <div> tag class timeline-item",
            "Write the <p> tag and the </p> tag with id as 'item6' inside the <div> tag class timeline-item"
          ],   
            "CSS": [
              {
                "selector": "body",
                "properties": [
                  {
                    "property": "font-family",
                    "value": "Arial, sans-serif"
                  },
                  {
                    "property": "background-color",
                    "value": "#f4f4f4"
                  },
                  {
                    "property": "margin",
                    "value": "0"
                  },
                  {
                    "property": "padding",
                    "value": "20px"
                  }
                ]
              },
              {
                "selector": ".timeline",
                "properties": [
                  {
                    "property": "max-width",
                    "value": "600px"
                  },
                  {
                    "property": "margin",
                    "value": "0 auto"
                  }
                ]
              },
              {
                "selector": ".timeline-item",
                "properties": [
                  {
                    "property": "background-color",
                    "value": "white"
                  },
                  {
                    "property": "border-left",
                    "value": "4px solid #3498db"
                  },
                  {
                    "property": "padding",
                    "value": "10px"
                  },
                  {
                    "property": "margin",
                    "value": "10px 0"
                  },
                  {
                    "property": "border-radius",
                    "value": "5px"
                  },
                  {
                    "property": "box-shadow",
                    "value": "0 2px 5px rgba(0, 0, 0, 0.1)"
                  }
                ]
              },
              {
                "selector": ".timeline-item h2",
                "properties": [
                  {
                    "property": "margin",
                    "value": "0 0 10px"
                  },
                  {
                    "property": "color",
                    "value": "#3498db"
                  },
                  {
                    "property": "font-size",
                    "value": "18px"
                  }
                ]
              },
              {
                "selector": ".timeline-item p",
                "properties": [
                  {
                    "property": "margin",
                    "value": "5px"
                  },
                  {
                    "property": "color",
                    "value": "#555"
                  },
                  {
                    "property": "font-size",
                    "value": "14px"
                  }
                ]
              }
            ],
          "CSS_Messages":[
            "Write a body css with margin set to 0, font-family set to 'Arial, sans-serif', padding set to '20px' and background-color set to '#f4f4f4'",
            "Write the timeline class with maximum width set to '600px', margin set to '0 auto'",
            "Write the timeline-item class with background-color set to 'white', border-left set to '4px solid #3498db', padding set to '10px', margin set to '10px 0', border-radius set to '5px' and box-shadow set to '0 2px 5px rgbs(0, 0, 0, 0.1)'",
            "Write the timeline-item class 'h2' with margin set to '0 0 10px', color set to '#3498db', font-size set to '18px'",
            "Write the timeline-item class 'p' with margin set to '5px', color set to '#555', font-size set to '14px'"
          ]
          },    
        "Sample_img":"http://storeholder.blob.core.windows.net/tpdata/Concept/course/HTCSjson/HTML_css_outputs/ProjectTimeline.png"   
      }
]